diff --git a/node_modules/@metamask/snap-controllers/dist/dist/index.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/index.d.ts
new file mode 100644
index 0000000..b226766
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/index.d.ts
@@ -0,0 +1,5 @@
+export { Json } from '@metamask/controllers';
+export * from './resource';
+export * from './services';
+export * from './snaps';
+export * from './utils';
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/index.js b/node_modules/@metamask/snap-controllers/dist/dist/index.js
new file mode 100644
index 0000000..4a129d7
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/index.js
@@ -0,0 +1,17 @@
+"use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __exportStar = (this && this.__exportStar) || function(m, exports) {
+    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+__exportStar(require("./resource"), exports);
+__exportStar(require("./services"), exports);
+__exportStar(require("./snaps"), exports);
+__exportStar(require("./utils"), exports);
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/index.js.map b/node_modules/@metamask/snap-controllers/dist/dist/index.js.map
new file mode 100644
index 0000000..23a1bc0
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,6CAA2B;AAC3B,6CAA2B;AAC3B,0CAAwB;AACxB,0CAAwB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.d.ts
new file mode 100644
index 0000000..652b81e
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.d.ts
@@ -0,0 +1,44 @@
+import SafeEventEmitter from '@metamask/safe-event-emitter';
+export interface ResourceBase {
+    readonly id: string;
+    readonly fromDomain: string;
+}
+export declare type Resources<ResourceType extends ResourceBase> = Record<string, ResourceType>;
+export declare type ResourceRequestHandler<T extends Record<string, unknown>> = (fromDomain: string, method: string, arg?: string | Partial<T>) => string | T | null;
+declare const alwaysRequiredFields: string[];
+declare type RequiredFieldsType = readonly string[] & typeof alwaysRequiredFields;
+interface ExternalResourceControllerArgs<StorageKey extends string, RequiredFields extends readonly string[], ResourceType extends Record<RequiredFieldsType[number], unknown>> {
+    storageKey: StorageKey;
+    requiredFields: RequiredFields;
+    initialResources: Resources<ResourceType & ResourceBase>;
+}
+/**
+ * A class intended to describe a particular resource that is managed by snaps.
+ * Example resources are assets.
+ *
+ * These are things that MetaMask treats as first-class objects with distinct properties within its own UI.
+ */
+export declare class ExternalResourceController<StorageKey extends string, RequiredFields extends readonly string[], ResourceType extends Record<RequiredFields[number], unknown>> extends SafeEventEmitter {
+    private readonly requiredFields;
+    private readonly storageKey;
+    private readonly store;
+    constructor({ storageKey, requiredFields, initialResources, }: ExternalResourceControllerArgs<StorageKey, RequiredFields, ResourceType>);
+    getResources(): Resources<ResourceType & ResourceBase>;
+    private setResources;
+    clearResources(): void;
+    deleteResourcesFor(fromDomain: string): void;
+    get(fromDomain: string, id: string): (ResourceType & ResourceBase) | null;
+    getAllResources(fromDomain: string): (ResourceType & ResourceBase)[];
+    add(fromDomain: string, resource: ResourceType & {
+        id?: string;
+    }): string;
+    update(fromDomain: string, resource: Partial<ResourceType> & {
+        id: string;
+    }): string;
+    processNewResource(fromDomain: string, resource: Partial<ResourceType> & {
+        id?: string;
+    }): ResourceType & ResourceBase;
+    delete(fromDomain: string, id: string): null;
+    handleRpcRequest(fromDomain: string, method: string, arg: any): string | (ResourceType & ResourceBase) | (ResourceType & ResourceBase)[] | null;
+}
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js
new file mode 100644
index 0000000..be7d8c4
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js
@@ -0,0 +1,143 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.ExternalResourceController = void 0;
+const obs_store_1 = require("@metamask/obs-store");
+const safe_event_emitter_1 = __importDefault(require("@metamask/safe-event-emitter"));
+const eth_rpc_errors_1 = require("eth-rpc-errors");
+const nanoid_1 = require("nanoid");
+const alwaysRequiredFields = ['fromDomain'];
+const computeState = (storageKey, initialResources) => {
+    return { [storageKey]: initialResources };
+};
+const getUnauthorizedMessage = (id) => `Not authorized to access resource with id "${id}".`;
+/**
+ * A class intended to describe a particular resource that is managed by snaps.
+ * Example resources are assets.
+ *
+ * These are things that MetaMask treats as first-class objects with distinct properties within its own UI.
+ */
+class ExternalResourceController extends safe_event_emitter_1.default {
+    constructor({ storageKey, requiredFields, initialResources, }) {
+        super();
+        this.requiredFields = requiredFields;
+        this.storageKey = storageKey;
+        this.store = new obs_store_1.ObservableStore(computeState(storageKey, initialResources));
+    }
+    getResources() {
+        return Object.assign({}, this.store.getState()[this.storageKey]);
+    }
+    setResources(resources) {
+        this.store.updateState({
+            [this.storageKey]: resources,
+        });
+    }
+    clearResources() {
+        this.setResources({});
+    }
+    deleteResourcesFor(fromDomain) {
+        const resources = this.getResources();
+        const newResources = Object.entries(resources).reduce((acc, [id, resource]) => {
+            if (resource.fromDomain !== fromDomain) {
+                acc[id] = resource;
+            }
+            return acc;
+        }, {});
+        this.setResources(newResources);
+    }
+    get(fromDomain, id) {
+        const resource = this.getResources()[id];
+        if (resource && resource.fromDomain !== fromDomain) {
+            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({
+                message: getUnauthorizedMessage(id),
+            });
+        }
+        return resource ? Object.assign({}, resource) : null;
+    }
+    getAllResources(fromDomain) {
+        return Object.values(this.getResources()).filter((resource) => {
+            return resource.fromDomain === fromDomain;
+        });
+    }
+    add(fromDomain, resource) {
+        const newResource = this.processNewResource(fromDomain, resource);
+        const { id } = newResource;
+        const resources = this.getResources();
+        if (resources[id]) {
+            throw new Error(`Resource with id "${id}" already exists.`);
+        }
+        else {
+            resources[id] = newResource;
+            this.setResources(resources);
+        }
+        return newResource.id;
+    }
+    update(fromDomain, resource) {
+        const { id } = resource;
+        const resources = this.getResources();
+        const existingResource = resources[id];
+        if (!existingResource) {
+            throw eth_rpc_errors_1.ethErrors.rpc.resourceNotFound({
+                message: `Resource with id "${id}" not found.`,
+            });
+        }
+        else if (existingResource.fromDomain !== fromDomain) {
+            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({
+                message: getUnauthorizedMessage(id),
+            });
+        }
+        resources[id] = this.processNewResource(fromDomain, Object.assign(Object.assign({}, resources[id]), resource));
+        this.setResources(resources);
+        return id;
+    }
+    processNewResource(fromDomain, resource) {
+        this.requiredFields.forEach((requiredField) => {
+            if (!(requiredField in resource)) {
+                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams(`Resource from "${fromDomain}" missing required field: ${requiredField}`);
+            }
+        });
+        return Object.assign(Object.assign({}, resource), { fromDomain, id: resource.id || nanoid_1.nanoid() });
+    }
+    delete(fromDomain, id) {
+        const resources = this.getResources();
+        const existingResource = resources[id];
+        if (!existingResource) {
+            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({
+                message: `Resource with id "${id}" not found.`,
+            });
+        }
+        else if (existingResource.fromDomain !== fromDomain) {
+            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({
+                message: getUnauthorizedMessage(id),
+            });
+        }
+        delete resources[id];
+        this.setResources(resources);
+        return null;
+    }
+    handleRpcRequest(fromDomain, method, arg) {
+        if (!fromDomain || typeof fromDomain !== 'string') {
+            throw new Error('Invalid fromDomain.');
+        }
+        switch (method) {
+            case 'get':
+                return this.get(fromDomain, arg);
+            case 'getAll':
+                return this.getAllResources(fromDomain);
+            case 'add':
+                return this.add(fromDomain, arg);
+            case 'update':
+                return this.update(fromDomain, arg);
+            case 'delete':
+                return this.delete(fromDomain, arg);
+            default:
+                throw eth_rpc_errors_1.ethErrors.rpc.methodNotFound({
+                    message: `Not an asset method: ${method}`,
+                });
+        }
+    }
+}
+exports.ExternalResourceController = ExternalResourceController;
+//# sourceMappingURL=ExternalResourceController.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js.map b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js.map
new file mode 100644
index 0000000..d5f1b6e
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/ExternalResourceController.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ExternalResourceController.js","sourceRoot":"","sources":["../../src/resource/ExternalResourceController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/index.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.d.ts
new file mode 100644
index 0000000..533c38b
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.d.ts
@@ -0,0 +1 @@
+export * from './ExternalResourceController';
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js
new file mode 100644
index 0000000..fa28bff
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js
@@ -0,0 +1,14 @@
+"use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __exportStar = (this && this.__exportStar) || function(m, exports) {
+    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+__exportStar(require("./ExternalResourceController"), exports);
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js.map b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js.map
new file mode 100644
index 0000000..dade5c4
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/resource/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/resource/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+DAA6C"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.d.ts
new file mode 100644
index 0000000..0ae2e41
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.d.ts
@@ -0,0 +1,83 @@
+/// <reference types="node" />
+import { Duplex } from 'stream';
+import ObjectMultiplex from '@metamask/object-multiplex';
+import { ExecutionServiceMessenger, SnapExecutionData } from '@metamask/snap-types';
+import { JsonRpcEngine, JsonRpcRequest } from 'json-rpc-engine';
+import { ExecutionService } from '.';
+export declare type SetupSnapProvider = (snapId: string, stream: Duplex) => void;
+declare type ExecutionServiceArgs = {
+    setupSnapProvider: SetupSnapProvider;
+    messenger: ExecutionServiceMessenger;
+    unresponsivePollingInterval?: number;
+    unresponsiveTimeout?: number;
+};
+export declare type SnapRpcHook = (origin: string, request: Record<string, unknown>) => Promise<unknown>;
+interface JobStreams {
+    rpc: Duplex | null;
+}
+declare type Job = {
+    id: string;
+    streams: JobStreams;
+    rpcEngine: JsonRpcEngine;
+};
+export declare abstract class AbstractExecutionService<JobType extends Job> implements ExecutionService {
+    protected _snapRpcHooks: Map<string, SnapRpcHook>;
+    protected jobs: Map<string, JobType>;
+    protected setupSnapProvider: SetupSnapProvider;
+    protected snapToJobMap: Map<string, string>;
+    protected jobToSnapMap: Map<string, string>;
+    protected _messenger: ExecutionServiceMessenger;
+    protected _unresponsivePollingInterval: number;
+    protected _unresponsiveTimeout: number;
+    protected _timeoutForUnresponsiveMap: Map<string, number>;
+    constructor({ setupSnapProvider, messenger, unresponsivePollingInterval, unresponsiveTimeout, }: ExecutionServiceArgs);
+    /**
+     * Performs additional necessary work during job termination. **MUST** be
+     * implemented by concrete implementations. See
+     * {@link AbstractExecutionService.terminate} for details.
+     *
+     * @param job - The object corresponding to the job to be terminated.
+     */
+    protected abstract _terminate(job: JobType): void;
+    /**
+     * Terminates the job with the specified ID and deletes all its associated
+     * data. Any subsequent messages targeting the job will fail with an error.
+     *
+     * @param jobId - The id of the job to be terminated.
+     */
+    terminate(jobId: string): void;
+    protected abstract _initJob(): Promise<JobType>;
+    terminateSnap(snapId: string): Promise<void>;
+    terminateAllSnaps(): Promise<void>;
+    /**
+     * Gets the RPC message handler for the given snap.
+     *
+     * @param snapId - The id of the Snap whose message handler to get.
+     */
+    getRpcMessageHandler(snapId: string): Promise<SnapRpcHook | undefined>;
+    executeSnap(snapData: SnapExecutionData): Promise<unknown>;
+    protected _command(jobId: string, message: JsonRpcRequest<unknown>): Promise<unknown>;
+    protected _removeSnapHooks(snapId: string): void;
+    protected _createSnapHooks(snapId: string, workerId: string): void;
+    protected _pollForJobStatus(snapId: string): void;
+    protected _getJobStatus(jobId: string): Promise<unknown>;
+    /**
+     * @returns The ID of the snap's job.
+     */
+    protected _getJobForSnap(snapId: string): string | undefined;
+    /**
+     * @returns The ID jobs's snap.
+     */
+    _getSnapForJob(jobId: string): string | undefined;
+    protected _mapSnapAndJob(snapId: string, jobId: string): void;
+    protected _removeSnapAndJobMapping(jobId: string): void;
+}
+/**
+ * Sets up stream multiplexing for the given stream.
+ *
+ * @param connectionStream - the stream to mux
+ * @param streamName - the name of the stream, for identification in errors
+ * @return {stream.Stream} the multiplexed stream
+ */
+export declare function setupMultiplex(connectionStream: Duplex, streamName: string): ObjectMultiplex;
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js
new file mode 100644
index 0000000..ac33751
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js
@@ -0,0 +1,215 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.setupMultiplex = exports.AbstractExecutionService = void 0;
+const object_multiplex_1 = __importDefault(require("@metamask/object-multiplex"));
+const nanoid_1 = require("nanoid");
+const pump_1 = __importDefault(require("pump"));
+class AbstractExecutionService {
+    constructor({ setupSnapProvider, messenger, unresponsivePollingInterval = 5000, unresponsiveTimeout = 30000, }) {
+        this._snapRpcHooks = new Map();
+        this.jobs = new Map();
+        this.setupSnapProvider = setupSnapProvider;
+        this.snapToJobMap = new Map();
+        this.jobToSnapMap = new Map();
+        this._messenger = messenger;
+        this._unresponsivePollingInterval = unresponsivePollingInterval;
+        this._unresponsiveTimeout = unresponsiveTimeout;
+        this._timeoutForUnresponsiveMap = new Map();
+    }
+    /**
+     * Terminates the job with the specified ID and deletes all its associated
+     * data. Any subsequent messages targeting the job will fail with an error.
+     *
+     * @param jobId - The id of the job to be terminated.
+     */
+    terminate(jobId) {
+        const jobWrapper = this.jobs.get(jobId);
+        if (!jobWrapper) {
+            throw new Error(`Job with id "${jobId}" not found.`);
+        }
+        Object.values(jobWrapper.streams).forEach((stream) => {
+            try {
+                !stream.destroyed && stream.destroy();
+                stream.removeAllListeners();
+            }
+            catch (err) {
+                console.log('Error while destroying stream', err);
+            }
+        });
+        this._terminate(jobWrapper);
+        const snapId = this.jobToSnapMap.get(jobId);
+        if (!snapId) {
+            throw new Error(`Failed to find a snap for job with id "${jobId}"`);
+        }
+        clearTimeout(this._timeoutForUnresponsiveMap.get(snapId));
+        this._timeoutForUnresponsiveMap.delete(snapId);
+        this._removeSnapAndJobMapping(jobId);
+        this.jobs.delete(jobId);
+        console.log(`job: "${jobId}" terminated`);
+    }
+    async terminateSnap(snapId) {
+        const jobId = this.snapToJobMap.get(snapId);
+        if (!jobId) {
+            throw new Error(`Job not found for snap with id "${snapId}".`);
+        }
+        this.terminate(jobId);
+    }
+    async terminateAllSnaps() {
+        for (const workerId of this.jobs.keys()) {
+            this.terminate(workerId);
+        }
+        this._snapRpcHooks.clear();
+    }
+    /**
+     * Gets the RPC message handler for the given snap.
+     *
+     * @param snapId - The id of the Snap whose message handler to get.
+     */
+    async getRpcMessageHandler(snapId) {
+        return this._snapRpcHooks.get(snapId);
+    }
+    async executeSnap(snapData) {
+        if (this.snapToJobMap.has(snapData.snapId)) {
+            throw new Error(`Snap "${snapData.snapId}" is already being executed.`);
+        }
+        const job = await this._initJob();
+        this._mapSnapAndJob(snapData.snapId, job.id);
+        this.setupSnapProvider(snapData.snapId, job.streams.rpc);
+        const result = await this._command(job.id, {
+            jsonrpc: '2.0',
+            method: 'executeSnap',
+            params: snapData,
+            id: nanoid_1.nanoid(),
+        });
+        // set up poll/ping for status to see if its up, if its not then emit event that it cant be reached
+        this._pollForJobStatus(snapData.snapId);
+        this._createSnapHooks(snapData.snapId, job.id);
+        return result;
+    }
+    async _command(jobId, message) {
+        if (typeof message !== 'object') {
+            throw new Error('Must send object.');
+        }
+        const job = this.jobs.get(jobId);
+        if (!job) {
+            throw new Error(`Job with id "${jobId}" not found.`);
+        }
+        console.log('Parent: Sending Command', message);
+        const response = await job.rpcEngine.handle(message);
+        if (response.error) {
+            throw new Error(response.error.message);
+        }
+        return response.result;
+    }
+    _removeSnapHooks(snapId) {
+        this._snapRpcHooks.delete(snapId);
+    }
+    _createSnapHooks(snapId, workerId) {
+        const rpcHook = async (origin, request) => {
+            return await this._command(workerId, {
+                id: nanoid_1.nanoid(),
+                jsonrpc: '2.0',
+                method: 'snapRpc',
+                params: {
+                    origin,
+                    request,
+                    target: snapId,
+                },
+            });
+        };
+        this._snapRpcHooks.set(snapId, rpcHook);
+    }
+    _pollForJobStatus(snapId) {
+        const jobId = this.snapToJobMap.get(snapId);
+        if (!jobId) {
+            throw new Error('no job id found for snap');
+        }
+        const timeout = setTimeout(async () => {
+            try {
+                await this._getJobStatus(jobId);
+                this._pollForJobStatus(snapId);
+            }
+            catch (_a) {
+                // The snap may have been terminated by the time we get here.
+                if (this.snapToJobMap.has(snapId)) {
+                    this._messenger.publish('ExecutionService:unresponsive', snapId);
+                }
+            }
+        }, this._unresponsivePollingInterval);
+        this._timeoutForUnresponsiveMap.set(snapId, timeout);
+    }
+    async _getJobStatus(jobId) {
+        let resolve;
+        let reject;
+        const timeoutPromise = new Promise((res, rej) => {
+            resolve = res;
+            reject = rej;
+        });
+        const timeout = setTimeout(() => {
+            reject(new Error('ping request timed out'));
+        }, this._unresponsiveTimeout);
+        return Promise.race([
+            this._command(jobId, {
+                jsonrpc: '2.0',
+                method: 'ping',
+                params: [],
+                id: nanoid_1.nanoid(),
+            }).then(() => {
+                clearTimeout(timeout);
+                resolve();
+            }),
+            timeoutPromise,
+        ]);
+    }
+    /**
+     * @returns The ID of the snap's job.
+     */
+    _getJobForSnap(snapId) {
+        return this.snapToJobMap.get(snapId);
+    }
+    /**
+     * @returns The ID jobs's snap.
+     */
+    _getSnapForJob(jobId) {
+        return this.jobToSnapMap.get(jobId);
+    }
+    _mapSnapAndJob(snapId, jobId) {
+        this.snapToJobMap.set(snapId, jobId);
+        this.jobToSnapMap.set(jobId, snapId);
+    }
+    _removeSnapAndJobMapping(jobId) {
+        const snapId = this.jobToSnapMap.get(jobId);
+        if (!snapId) {
+            throw new Error(`job: "${jobId}" has no mapped snap.`);
+        }
+        this.jobToSnapMap.delete(jobId);
+        this.snapToJobMap.delete(snapId);
+        this._removeSnapHooks(snapId);
+    }
+}
+exports.AbstractExecutionService = AbstractExecutionService;
+/**
+ * Sets up stream multiplexing for the given stream.
+ *
+ * @param connectionStream - the stream to mux
+ * @param streamName - the name of the stream, for identification in errors
+ * @return {stream.Stream} the multiplexed stream
+ */
+function setupMultiplex(connectionStream, streamName) {
+    const mux = new object_multiplex_1.default();
+    pump_1.default(connectionStream, 
+    // Typecast: stream type mismatch
+    mux, connectionStream, (err) => {
+        if (err) {
+            streamName
+                ? console.error(`"${streamName}" stream failure.`, err)
+                : console.error(err);
+        }
+    });
+    return mux;
+}
+exports.setupMultiplex = setupMultiplex;
+//# sourceMappingURL=AbstractExecutionService.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js.map b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js.map
new file mode 100644
index 0000000..cc92968
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/AbstractExecutionService.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"AbstractExecutionService.js","sourceRoot":"","sources":["../../src/services/AbstractExecutionService.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.d.ts
new file mode 100644
index 0000000..d9b57ab
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.d.ts
@@ -0,0 +1,18 @@
+import { SnapExecutionData } from '@metamask/snap-types';
+import { JsonRpcRequest } from 'json-rpc-engine';
+import { SnapRpcHook } from './AbstractExecutionService';
+export interface SnapMetadata {
+    hostname: string;
+}
+export declare type TerminateSnap = (snapId: string) => Promise<void>;
+export declare type Command = (snapId: string, message: JsonRpcRequest<unknown>) => Promise<unknown>;
+export declare type TerminateAll = () => Promise<void>;
+export declare type CreateSnapEnvironment = (metadata: SnapMetadata) => Promise<string>;
+export declare type ExecuteSnap = (snapData: SnapExecutionData) => Promise<unknown>;
+export declare type GetRpcMessageHandler = (snapId: string) => Promise<SnapRpcHook | undefined>;
+export interface ExecutionService {
+    terminateSnap: TerminateSnap;
+    terminateAllSnaps: TerminateAll;
+    executeSnap: ExecuteSnap;
+    getRpcMessageHandler: GetRpcMessageHandler;
+}
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js
new file mode 100644
index 0000000..8707dd1
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js
@@ -0,0 +1,3 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+//# sourceMappingURL=ExecutionService.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js.map b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js.map
new file mode 100644
index 0000000..07f5450
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/ExecutionService.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ExecutionService.js","sourceRoot":"","sources":["../../src/services/ExecutionService.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.d.ts
new file mode 100644
index 0000000..057ee0f
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.d.ts
@@ -0,0 +1,38 @@
+/// <reference types="node" />
+import { Duplex } from 'stream';
+import { ObservableStore } from '@metamask/obs-store';
+import { WorkerParentPostMessageStream } from '@metamask/post-message-stream';
+import { ExecutionServiceMessenger } from '@metamask/snap-types';
+import { JsonRpcEngine } from 'json-rpc-engine';
+import { AbstractExecutionService, SetupSnapProvider } from './AbstractExecutionService';
+interface WorkerControllerArgs {
+    setupSnapProvider: SetupSnapProvider;
+    workerUrl: URL;
+    messenger: ExecutionServiceMessenger;
+    unresponsivePollingInterval?: number;
+    unresponsiveTimeout?: number;
+}
+interface WorkerStreams {
+    command: Duplex;
+    rpc: Duplex | null;
+    _connection: WorkerParentPostMessageStream;
+}
+interface WorkerWrapper {
+    id: string;
+    streams: WorkerStreams;
+    rpcEngine: JsonRpcEngine;
+    worker: Worker;
+}
+export declare class WebWorkerExecutionService extends AbstractExecutionService<WorkerWrapper> {
+    store: ObservableStore<{
+        workers: Record<string, WorkerWrapper>;
+    }>;
+    private workerUrl;
+    constructor({ setupSnapProvider, workerUrl, messenger, unresponsivePollingInterval, unresponsiveTimeout, }: WorkerControllerArgs);
+    private _setWorker;
+    private _deleteWorker;
+    protected _terminate(workerWrapper: WorkerWrapper): void;
+    protected _initJob(): Promise<WorkerWrapper>;
+    _initWorkerStreams(worker: Worker, workerId: string): WorkerStreams;
+}
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js
new file mode 100644
index 0000000..b98a335
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js
@@ -0,0 +1,94 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.WebWorkerExecutionService = void 0;
+const obs_store_1 = require("@metamask/obs-store");
+const post_message_stream_1 = require("@metamask/post-message-stream");
+const execution_environments_1 = require("@metamask/execution-environments");
+const json_rpc_engine_1 = require("json-rpc-engine");
+const json_rpc_middleware_stream_1 = require("json-rpc-middleware-stream");
+const nanoid_1 = require("nanoid");
+const pump_1 = __importDefault(require("pump"));
+const AbstractExecutionService_1 = require("./AbstractExecutionService");
+class WebWorkerExecutionService extends AbstractExecutionService_1.AbstractExecutionService {
+    constructor({ setupSnapProvider, workerUrl, messenger, unresponsivePollingInterval = 5000, unresponsiveTimeout = 30000, }) {
+        super({
+            setupSnapProvider,
+            messenger,
+            unresponsivePollingInterval,
+            unresponsiveTimeout,
+        });
+        this.workerUrl = workerUrl;
+        this.store = new obs_store_1.ObservableStore({ workers: {} });
+    }
+    _setWorker(workerId, workerWrapper) {
+        this.jobs.set(workerId, workerWrapper);
+        const newWorkerState = Object.assign(Object.assign({}, this.store.getState().workers), { [workerId]: workerWrapper });
+        this.store.updateState({ workers: newWorkerState });
+    }
+    _deleteWorker(workerId) {
+        this.jobs.delete(workerId);
+        const newWorkerState = Object.assign({}, this.store.getState().workers);
+        delete newWorkerState[workerId];
+        this.store.updateState({ workers: newWorkerState });
+    }
+    _terminate(workerWrapper) {
+        workerWrapper.worker.terminate();
+        this._deleteWorker(workerWrapper.id);
+    }
+    async _initJob() {
+        const workerId = nanoid_1.nanoid();
+        const worker = new Worker(this.workerUrl, {
+            name: workerId,
+        });
+        // Handle out-of-band errors, i.e. errors thrown from the snap outside of the req/res cycle.
+        const errorHandler = (ev) => {
+            if (this._messenger) {
+                const snapId = this.jobToSnapMap.get(workerId);
+                if (snapId) {
+                    this._messenger.publish('ExecutionService:unhandledError', snapId, {
+                        code: ev.error.code,
+                        message: ev.error.message,
+                        data: ev.error.data,
+                    });
+                }
+            }
+        };
+        worker.addEventListener('error', errorHandler, { once: true });
+        const streams = this._initWorkerStreams(worker, workerId);
+        const rpcEngine = new json_rpc_engine_1.JsonRpcEngine();
+        const jsonRpcConnection = json_rpc_middleware_stream_1.createStreamMiddleware();
+        pump_1.default(jsonRpcConnection.stream, streams.command, jsonRpcConnection.stream);
+        rpcEngine.push(jsonRpcConnection.middleware);
+        const workerWrapper = {
+            id: workerId,
+            streams,
+            rpcEngine,
+            worker,
+        };
+        this._setWorker(workerId, workerWrapper);
+        await this._command(workerId, {
+            jsonrpc: '2.0',
+            method: 'ping',
+            id: nanoid_1.nanoid(),
+        });
+        return workerWrapper;
+    }
+    _initWorkerStreams(worker, workerId) {
+        const workerStream = new post_message_stream_1.WorkerParentPostMessageStream({ worker });
+        // Typecast justification: stream type mismatch
+        const mux = AbstractExecutionService_1.setupMultiplex(workerStream, `Worker:${workerId}`);
+        const commandStream = mux.createStream(execution_environments_1.SNAP_STREAM_NAMES.COMMAND);
+        const rpcStream = mux.createStream(execution_environments_1.SNAP_STREAM_NAMES.JSON_RPC);
+        // Typecast: stream type mismatch
+        return {
+            command: commandStream,
+            rpc: rpcStream,
+            _connection: workerStream,
+        };
+    }
+}
+exports.WebWorkerExecutionService = WebWorkerExecutionService;
+//# sourceMappingURL=WebWorkerExecutionService.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js.map b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js.map
new file mode 100644
index 0000000..d3b00f6
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/WebWorkerExecutionService.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"WebWorkerExecutionService.js","sourceRoot":"","sources":["../../src/services/WebWorkerExecutionService.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/index.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/services/index.d.ts
new file mode 100644
index 0000000..b28af47
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/index.d.ts
@@ -0,0 +1,3 @@
+export * from './AbstractExecutionService';
+export * from './ExecutionService';
+export * from './WebWorkerExecutionService';
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/index.js b/node_modules/@metamask/snap-controllers/dist/dist/services/index.js
new file mode 100644
index 0000000..afbf9b8
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/index.js
@@ -0,0 +1,16 @@
+"use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __exportStar = (this && this.__exportStar) || function(m, exports) {
+    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+__exportStar(require("./AbstractExecutionService"), exports);
+__exportStar(require("./ExecutionService"), exports);
+__exportStar(require("./WebWorkerExecutionService"), exports);
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/services/index.js.map b/node_modules/@metamask/snap-controllers/dist/dist/services/index.js.map
new file mode 100644
index 0000000..f5ba95f
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/services/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/services/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6DAA2C;AAC3C,qDAAmC;AACnC,8DAA4C"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.d.ts
new file mode 100644
index 0000000..e5c8f93
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.d.ts
@@ -0,0 +1,450 @@
+import { BaseControllerV2 as BaseController, RestrictedControllerMessenger, GetEndowments, GetPermissions, HasPermission, HasPermissions, RequestPermissions, RevokeAllPermissions } from '@metamask/controllers';
+import { ErrorJSON, ErrorMessageEvent, SnapId, UnresponsiveMessageEvent } from '@metamask/snap-types';
+import { SerializedEthereumRpcError } from 'eth-rpc-errors/dist/classes';
+import type { Patch } from 'immer';
+import { Json } from 'json-rpc-engine';
+import { ExecuteSnap, GetRpcMessageHandler, TerminateAll, TerminateSnap } from '../services/ExecutionService';
+import { SnapManifest } from './json-schemas';
+export declare const controllerName = "SnapController";
+export declare const SNAP_PREFIX = "wallet_snap_";
+export declare const SNAP_PREFIX_REGEX: RegExp;
+export declare const DEFAULT_EXPOSED_APIS: string[];
+declare type TruncatedSnapFields = 'id' | 'initialPermissions' | 'permissionName' | 'version';
+declare type RequestedSnapPermissions = {
+    [permission: string]: Record<string, Json>;
+};
+/**
+ * A Snap as it exists in {@link SnapController} state.
+ */
+export declare type Snap = {
+    /**
+     * Whether the Snap is enabled, which determines if it can be started.
+     */
+    enabled: boolean;
+    /**
+     * The ID of the Snap.
+     */
+    id: SnapId;
+    /**
+     * The initial permissions of the Snap, which will be requested when it is
+     * installed.
+     */
+    initialPermissions: RequestedSnapPermissions;
+    /**
+     * The Snap's manifest file.
+     */
+    manifest: SnapManifest;
+    /**
+     * The name of the permission used to invoke the Snap.
+     */
+    permissionName: string;
+    /**
+     * The source code of the Snap.
+     */
+    sourceCode: string;
+    /**
+     * The current status of the Snap, e.g. whether it's running or stopped.
+     */
+    status: SnapStatus;
+    /**
+     * The version of the Snap.
+     */
+    version: string;
+};
+/**
+ * A wrapper type for any data stored during runtime of Snaps.
+ * It is not persisted in state as it contains non-serializable data and is only relevant for the current session.
+ */
+export interface SnapRuntimeData {
+    /**
+     * A promise that resolves when the Snap has finished installing
+     */
+    installPromise: null | Promise<Snap>;
+    /**
+     * A Unix timestamp for the last time the Snap received an RPC request
+     */
+    lastRequest: null | number;
+    /**
+     * RPC handler designated for the Snap
+     */
+    rpcHandler: null | ((origin: string, request: Record<string, unknown>) => Promise<unknown>);
+}
+/**
+ * A {@link Snap} object with the fields that are relevant to an external
+ * caller.
+ */
+export declare type TruncatedSnap = Pick<Snap, TruncatedSnapFields>;
+export declare type SnapError = {
+    message: string;
+    code: number;
+    data?: Json;
+};
+export declare type ProcessSnapResult = TruncatedSnap | {
+    error: SerializedEthereumRpcError;
+};
+export declare type InstallSnapsResult = Record<SnapId, ProcessSnapResult>;
+declare type CloseAllConnectionsFunction = (origin: string) => void;
+declare type StoredSnaps = Record<SnapId, Snap>;
+export declare type SnapControllerState = {
+    snaps: StoredSnaps;
+    snapStates: Record<SnapId, Json>;
+    snapErrors: {
+        [internalID: string]: SnapError & {
+            internalID: string;
+        };
+    };
+};
+/**
+ * Adds the specified Snap to state. Used during installation.
+ */
+export declare type AddSnap = {
+    type: `${typeof controllerName}:add`;
+    handler: SnapController['add'];
+};
+/**
+ * Gets the specified Snap from state.
+ */
+export declare type GetSnap = {
+    type: `${typeof controllerName}:get`;
+    handler: SnapController['get'];
+};
+/**
+ * Gets the specified Snap's JSON-RPC message handler function.
+ */
+export declare type GetSnapRpcMessageHandler = {
+    type: `${typeof controllerName}:getRpcMessageHandler`;
+    handler: SnapController['getRpcMessageHandler'];
+};
+/**
+ * Gets the specified Snap's persisted state.
+ */
+export declare type GetSnapState = {
+    type: `${typeof controllerName}:getSnapState`;
+    handler: SnapController['getSnapState'];
+};
+/**
+ * Checks if the specified snap exists in state.
+ */
+export declare type HasSnap = {
+    type: `${typeof controllerName}:has`;
+    handler: SnapController['has'];
+};
+/**
+ * Updates the specified Snap's persisted state.
+ */
+export declare type UpdateSnapState = {
+    type: `${typeof controllerName}:updateSnapState`;
+    handler: SnapController['updateSnapState'];
+};
+export declare type SnapControllerActions = AddSnap | GetSnap | GetSnapRpcMessageHandler | GetSnapState | HasSnap | UpdateSnapState;
+export declare type SnapStateChange = {
+    type: `${typeof controllerName}:stateChange`;
+    payload: [SnapControllerState, Patch[]];
+};
+/**
+ * Emitted when a Snap has been added to state during installation.
+ */
+export declare type SnapAdded = {
+    type: `${typeof controllerName}:snapAdded`;
+    payload: [snapId: string, snap: Snap, svgIcon: string | undefined];
+};
+/**
+ * Emitted when a Snap has been started after being added and authorized during
+ * installation.
+ */
+export declare type SnapInstalled = {
+    type: `${typeof controllerName}:snapInstalled`;
+    payload: [snapId: string];
+};
+/**
+ * Emitted when a Snap is removed.
+ */
+export declare type SnapRemoved = {
+    type: `${typeof controllerName}:snapRemoved`;
+    payload: [snapId: string];
+};
+export declare type SnapControllerEvents = SnapAdded | SnapInstalled | SnapRemoved | SnapStateChange;
+export declare type AllowedActions = GetEndowments | GetPermissions | HasPermission | HasPermissions | RevokeAllPermissions | RequestPermissions;
+export declare type AllowedEvents = ErrorMessageEvent | UnresponsiveMessageEvent;
+declare type SnapControllerMessenger = RestrictedControllerMessenger<typeof controllerName, SnapControllerActions | AllowedActions, SnapControllerEvents | AllowedEvents, AllowedActions['type'], AllowedEvents['type']>;
+declare type SnapControllerArgs = {
+    closeAllConnections: CloseAllConnectionsFunction;
+    endowmentPermissionNames: string[];
+    executeSnap: ExecuteSnap;
+    getRpcMessageHandler: GetRpcMessageHandler;
+    messenger: SnapControllerMessenger;
+    state?: SnapControllerState;
+    terminateAllSnaps: TerminateAll;
+    terminateSnap: TerminateSnap;
+    idleTimeCheckInterval?: number;
+    maxIdleTime?: number;
+    maxRequestTime?: number;
+    npmRegistryUrl?: string;
+};
+declare type AddSnapBase = {
+    id: SnapId;
+    version?: string;
+};
+declare type AddSnapDirectlyArgs = AddSnapBase & {
+    manifest: SnapManifest;
+    sourceCode: string;
+};
+declare type AddSnapArgs = AddSnapBase | AddSnapDirectlyArgs;
+export declare enum SnapStatus {
+    installing = "installing",
+    running = "running",
+    stopped = "stopped",
+    crashed = "crashed"
+}
+export declare enum SnapStatusEvent {
+    start = "start",
+    stop = "stop",
+    crash = "crash"
+}
+export declare class SnapController extends BaseController<string, SnapControllerState, SnapControllerMessenger> {
+    private _closeAllConnections;
+    private _endowmentPermissionNames;
+    private _executeSnap;
+    private _getRpcMessageHandler;
+    private _idleTimeCheckInterval;
+    private _maxIdleTime;
+    private _maxRequestTime;
+    private _snapsRuntimeData;
+    private _terminateAllSnaps;
+    private _terminateSnap;
+    private _timeoutForLastRequestStatus?;
+    private _npmRegistryUrl?;
+    constructor({ closeAllConnections, executeSnap, getRpcMessageHandler, messenger, state, terminateAllSnaps, terminateSnap, endowmentPermissionNames, npmRegistryUrl, idleTimeCheckInterval, maxIdleTime, maxRequestTime, }: SnapControllerArgs);
+    /**
+     * Constructor helper for registering the controller's messaging system
+     * actions.
+     */
+    private registerMessageHandlers;
+    _pollForLastRequestStatus(): void;
+    _stopSnapsLastRequestPastMax(): void;
+    _onUnresponsiveSnap(snapId: SnapId): Promise<void>;
+    _onUnhandledSnapError(snapId: SnapId, error: ErrorJSON): Promise<void>;
+    /**
+     * Transitions between states using `snapStatusStateMachineConfig` as the template to figure out the next state.
+     * This transition function uses a very minimal subset of XState conventions:
+     * - supports initial state
+     * - .on supports raw event target string
+     * - .on supports {target, cond} object
+     * - the arguments for `cond` is the `SerializedSnap` instead of Xstate convention of `(event, context) => boolean`
+     *
+     * @param snapId - The id of the snap to transition
+     * @param event - The event enum to use to transition
+     */
+    _transitionSnapState(snapId: SnapId, event: SnapStatusEvent): void;
+    /**
+     * Starts the given snap. Throws an error if no such snap exists
+     * or if it is already running.
+     *
+     * @param snapId - The id of the Snap to start.
+     */
+    startSnap(snapId: SnapId): Promise<void>;
+    /**
+     * Enables the given snap. A snap can only be started if it is enabled.
+     *
+     * @param snapId - The id of the Snap to enable.
+     */
+    enableSnap(snapId: SnapId): void;
+    /**
+     * Disables the given snap. A snap can only be started if it is enabled.
+     *
+     * @param snapId - The id of the Snap to disable.
+     */
+    disableSnap(snapId: SnapId): Promise<void>;
+    /**
+     * Stops the given snap. Throws an error if no such snap exists
+     * or if it is already stopped.
+     *
+     * @param snapId - The id of the Snap to stop.
+     */
+    stopSnap(snapId: SnapId): Promise<void>;
+    /**
+     * Stops the given snap, removes all hooks, closes all connections, and
+     * terminates its worker.
+     *
+     * @param snapId - The id of the Snap to stop.
+     * @param statusEvent - The Snap status event that caused the snap to be
+     * stopped.
+     */
+    private _stopSnap;
+    /**
+     * Returns whether the given snap is running.
+     * Throws an error if the snap doesn't exist.
+     *
+     * @param snapId - The id of the Snap to check.
+     */
+    isRunning(snapId: SnapId): boolean;
+    /**
+     * Returns whether the given snap has been added to state.
+     *
+     * @param snapId - The id of the Snap to check for.
+     */
+    has(snapId: SnapId): boolean;
+    /**
+     * Gets the snap with the given id if it exists, including all data.
+     * This should not be used if the snap is to be serializable, as e.g.
+     * the snap sourceCode may be quite large.
+     *
+     * @param snapId - The id of the Snap to get.
+     */
+    get(snapId: SnapId): Snap;
+    /**
+     * Gets the snap with the given id if it exists, excluding any
+     * non-serializable or expensive-to-serialize data.
+     *
+     * @param snapId - The id of the Snap to get.
+     */
+    getTruncated(snapId: SnapId): TruncatedSnap | null;
+    /**
+     * Updates the own state of the snap with the given id.
+     * This is distinct from the state MetaMask uses to manage snaps.
+     *
+     * @param snapId - The id of the Snap whose state should be updated.
+     * @param newSnapState - The new state of the snap.
+     */
+    updateSnapState(snapId: SnapId, newSnapState: Json): Promise<void>;
+    /**
+     * Adds error from a snap to the SnapControllers state.
+     *
+     * @param snapError - The error to store on the SnapController
+     */
+    addSnapError(snapError: SnapError): void;
+    /**
+     * Removes an error by internalID from a the SnapControllers state.
+     *
+     * @param internalID - The internal error ID to remove on the SnapController
+     */
+    removeSnapError(internalID: string): Promise<void>;
+    /**
+     * Clears all errors from the SnapControllers state.
+     *
+     */
+    clearSnapErrors(): Promise<void>;
+    /**
+     * Gets the own state of the snap with the given id.
+     * This is distinct from the state MetaMask uses to manage snaps.
+     *
+     * @param snapId - The id of the Snap whose state to get.
+     */
+    getSnapState(snapId: SnapId): Promise<Json>;
+    /**
+     * Completely clear the controller's state: delete all associated data,
+     * handlers, event listeners, and permissions; tear down all snap providers.
+     */
+    clearState(): void;
+    /**
+     * Removes the given snap from state, and clears all associated handlers
+     * and listeners.
+     *
+     * @param snapId - The id of the Snap.
+     */
+    removeSnap(snapId: SnapId): Promise<void>;
+    /**
+     * Stops the given snaps, removes them from state, and clears all associated
+     * permissions, handlers, and listeners.
+     *
+     * @param snapIds - The ids of the Snaps.
+     */
+    removeSnaps(snapIds: string[]): Promise<void>;
+    /**
+     * Safely revokes all permissions granted to a Snap.
+     *
+     * @param snapId - The snap ID.
+     */
+    private revokeAllSnapPermissions;
+    /**
+     * Gets the serialized permitted snaps of the given origin, if any.
+     * @param origin - The origin whose permitted snaps to retrieve.
+     */
+    getPermittedSnaps(origin: string): InstallSnapsResult;
+    /**
+     * Installs the snaps requested by the given origin, returning the snap
+     * object if the origin is permitted to install it, and an authorization error
+     * otherwise.
+     *
+     * @param origin - The origin that requested to install the snaps.
+     * @param requestedSnaps - The snaps to install.
+     * @returns An object of snap ids and snap objects, or errors if a
+     * snap couldn't be installed.
+     */
+    installSnaps(origin: string, requestedSnaps: RequestedSnapPermissions): Promise<InstallSnapsResult>;
+    /**
+     * Adds, authorizes, and runs the given snap with a snap provider.
+     * Results from this method should be efficiently serializable.
+     *
+     * @param snapId - The id of the snap.
+     * @param version - The version of the snap to install.
+     * @returns The resulting snap object, or an error if something went wrong.
+     */
+    private processRequestedSnap;
+    /**
+     * Returns a promise representing the complete installation of the requested snap.
+     * If the snap is already being installed, the previously pending promise will be returned.
+     *
+     * @param snapId - The id of the Snap.
+     * @param args - Object containing either the URL of the snap's manifest,
+     * or the snap's manifest and source code.
+     * @returns The resulting snap object.
+     */
+    add(args: AddSnapArgs): Promise<Snap>;
+    private validateSnapId;
+    private _startSnap;
+    /**
+     * Gets the names of all endowments that will be added to the Snap's
+     * Compartment when it executes. These should be the names of global
+     * JavaScript APIs accessible in the root realm of the execution environment.
+     *
+     * Throws an error if the endowment getter for a permission returns a truthy
+     * value that is not an array of strings.
+     *
+     * @param snapId - The id of the snap whose SES endowments to get.
+     * @returns An array of the names of the endowments.
+     */
+    private _getEndowments;
+    /**
+     * Internal method. See the "add" method.
+     *
+     * @param snapId - The id of the Snap.
+     * @param args - The add snap args.
+     * @returns The resulting snap object.
+     */
+    private _add;
+    /**
+     * Fetches the manifest and source code of a snap.
+     *
+     * @param snapId - The id of the Snap.
+     * @param version - The version of the Snap to fetch.
+     * @returns A tuple of the Snap manifest object and the Snap source code.
+     */
+    private _fetchSnap;
+    private _fetchNpmSnap;
+    /**
+     * Fetches the manifest and source code of a local snap.
+     *
+     * @param localhostUrl - The localhost URL to download from.
+     * @returns The validated manifest and the source code.
+     */
+    private _fetchLocalSnap;
+    /**
+     * Initiates a request for the given snap's initial permissions.
+     * Must be called in order. See processRequestedSnap.
+     *
+     * @param snapId - The id of the Snap.
+     * @returns The snap's approvedPermissions.
+     */
+    private authorize;
+    destroy(): void;
+    /**
+     * Gets the RPC message handler for the given snap.
+     *
+     * @param snapId - The id of the Snap whose message handler to get.
+     */
+    getRpcMessageHandler(snapId: SnapId): Promise<(origin: string, request: Record<string, unknown>) => Promise<unknown>>;
+    private _recordSnapRpcRequest;
+    private _getSnapRuntimeData;
+}
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js
new file mode 100644
index 0000000..85e4da7
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js
@@ -0,0 +1,878 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.SnapController = exports.SnapStatusEvent = exports.SnapStatus = exports.DEFAULT_EXPOSED_APIS = exports.SNAP_PREFIX_REGEX = exports.SNAP_PREFIX = exports.controllerName = void 0;
+const controllers_1 = require("@metamask/controllers");
+const eth_rpc_errors_1 = require("eth-rpc-errors");
+const nanoid_1 = require("nanoid");
+const semver_1 = require("semver");
+const utils_1 = require("../utils");
+const json_schemas_1 = require("./json-schemas");
+const utils_2 = require("./utils");
+exports.controllerName = 'SnapController';
+exports.SNAP_PREFIX = 'wallet_snap_';
+exports.SNAP_PREFIX_REGEX = new RegExp(`^${exports.SNAP_PREFIX}`, 'u');
+// APIs exposed by default to the Snap without needing permissions
+exports.DEFAULT_EXPOSED_APIS = [
+    'atob',
+    'btoa',
+    'BigInt',
+    'Buffer',
+    'console',
+    'crypto',
+    'Date',
+    'Math',
+    'setTimeout',
+    'clearTimeout',
+    'SubtleCrypto',
+    'TextDecoder',
+    'TextEncoder',
+    'URL',
+    'WebAssembly',
+];
+const TRUNCATED_SNAP_PROPERTIES = new Set([
+    'initialPermissions',
+    'id',
+    'permissionName',
+    'version',
+]);
+const defaultState = {
+    snapErrors: {},
+    snaps: {},
+    snapStates: {},
+};
+var SnapStatus;
+(function (SnapStatus) {
+    SnapStatus["installing"] = "installing";
+    SnapStatus["running"] = "running";
+    SnapStatus["stopped"] = "stopped";
+    SnapStatus["crashed"] = "crashed";
+})(SnapStatus = exports.SnapStatus || (exports.SnapStatus = {}));
+var SnapStatusEvent;
+(function (SnapStatusEvent) {
+    SnapStatusEvent["start"] = "start";
+    SnapStatusEvent["stop"] = "stop";
+    SnapStatusEvent["crash"] = "crash";
+})(SnapStatusEvent = exports.SnapStatusEvent || (exports.SnapStatusEvent = {}));
+/**
+ * Guard transitioning when the snap is disabled.
+ */
+const disabledGuard = (serializedSnap) => {
+    return serializedSnap.enabled;
+};
+/**
+ * The state machine configuration for a snaps `status` state.
+ * Using a state machine for a snaps `status` ensures that the snap transitions to a valid next lifecycle state.
+ * Supports a very minimal subset of XState conventions outlined in `_transitionSnapState`.
+ */
+const snapStatusStateMachineConfig = {
+    initial: SnapStatus.installing,
+    states: {
+        [SnapStatus.installing]: {
+            on: {
+                [SnapStatusEvent.start]: {
+                    target: SnapStatus.running,
+                    cond: disabledGuard,
+                },
+            },
+        },
+        [SnapStatus.running]: {
+            on: {
+                [SnapStatusEvent.stop]: SnapStatus.stopped,
+                [SnapStatusEvent.crash]: SnapStatus.crashed,
+            },
+        },
+        [SnapStatus.stopped]: {
+            on: {
+                [SnapStatusEvent.start]: {
+                    target: SnapStatus.running,
+                    cond: disabledGuard,
+                },
+            },
+        },
+        [SnapStatus.crashed]: {
+            on: {
+                [SnapStatusEvent.start]: {
+                    target: SnapStatus.running,
+                    cond: disabledGuard,
+                },
+            },
+        },
+    },
+};
+const name = 'SnapController';
+/*
+ * A snap is initialized in three phases:
+ * - Add: Loads the snap from a remote source and parses it.
+ * - Authorize: Requests the snap's required permissions from the user.
+ * - Start: Initializes the snap in its SES realm with the authorized permissions.
+ */
+class SnapController extends controllers_1.BaseControllerV2 {
+    constructor({ closeAllConnections, executeSnap, getRpcMessageHandler, messenger, state, terminateAllSnaps, terminateSnap, endowmentPermissionNames = [], npmRegistryUrl, idleTimeCheckInterval = 5000, maxIdleTime = 30000, maxRequestTime = 60000, }) {
+        super({
+            messenger,
+            metadata: {
+                snapErrors: {
+                    persist: false,
+                    anonymous: false,
+                },
+                snapStates: {
+                    persist: true,
+                    anonymous: false,
+                },
+                snaps: {
+                    persist: (snaps) => {
+                        return Object.values(snaps)
+                            .map((snap) => {
+                            return Object.assign(Object.assign({}, snap), { 
+                                // At the time state is rehydrated, no snap will be running.
+                                status: SnapStatus.stopped });
+                        })
+                            .reduce((memo, snap) => {
+                            memo[snap.id] = snap;
+                            return memo;
+                        }, {});
+                    },
+                    anonymous: false,
+                },
+            },
+            name,
+            state: Object.assign(Object.assign({}, defaultState), state),
+        });
+        this._closeAllConnections = closeAllConnections;
+        this._endowmentPermissionNames = endowmentPermissionNames;
+        this._executeSnap = executeSnap;
+        this._getRpcMessageHandler = getRpcMessageHandler;
+        this._onUnhandledSnapError = this._onUnhandledSnapError.bind(this);
+        this._onUnresponsiveSnap = this._onUnresponsiveSnap.bind(this);
+        this._terminateSnap = terminateSnap;
+        this._terminateAllSnaps = terminateAllSnaps;
+        this._idleTimeCheckInterval = idleTimeCheckInterval;
+        this._maxIdleTime = maxIdleTime;
+        this._maxRequestTime = maxRequestTime;
+        this._pollForLastRequestStatus();
+        this._snapsRuntimeData = new Map();
+        this._npmRegistryUrl = npmRegistryUrl;
+        this.messagingSystem.subscribe('ExecutionService:unhandledError', this._onUnhandledSnapError);
+        this.messagingSystem.subscribe('ExecutionService:unresponsive', this._onUnresponsiveSnap);
+        this.registerMessageHandlers();
+    }
+    /**
+     * Constructor helper for registering the controller's messaging system
+     * actions.
+     */
+    registerMessageHandlers() {
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:add`, (...args) => this.add(...args));
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:get`, (...args) => this.get(...args));
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:getRpcMessageHandler`, (...args) => this.getRpcMessageHandler(...args));
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:getSnapState`, (...args) => this.getSnapState(...args));
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:has`, (...args) => this.has(...args));
+        this.messagingSystem.registerActionHandler(`${exports.controllerName}:updateSnapState`, (...args) => this.updateSnapState(...args));
+    }
+    _pollForLastRequestStatus() {
+        this._timeoutForLastRequestStatus = setTimeout(async () => {
+            this._stopSnapsLastRequestPastMax();
+            this._pollForLastRequestStatus();
+        }, this._idleTimeCheckInterval);
+    }
+    _stopSnapsLastRequestPastMax() {
+        this._snapsRuntimeData.forEach(async (runtime, snapId) => {
+            if (runtime.lastRequest &&
+                this._maxIdleTime &&
+                utils_1.timeSince(runtime.lastRequest) > this._maxIdleTime) {
+                this._stopSnap(snapId, SnapStatusEvent.stop);
+            }
+        });
+    }
+    async _onUnresponsiveSnap(snapId) {
+        await this._stopSnap(snapId, SnapStatusEvent.crash);
+        this.addSnapError({
+            // TODO: Standardize error code
+            code: eth_rpc_errors_1.errorCodes.rpc.internal,
+            message: 'Snap Unresponsive',
+            data: {
+                snapId,
+            },
+        });
+    }
+    async _onUnhandledSnapError(snapId, error) {
+        await this._stopSnap(snapId, SnapStatusEvent.crash);
+        this.addSnapError(error);
+    }
+    /**
+     * Transitions between states using `snapStatusStateMachineConfig` as the template to figure out the next state.
+     * This transition function uses a very minimal subset of XState conventions:
+     * - supports initial state
+     * - .on supports raw event target string
+     * - .on supports {target, cond} object
+     * - the arguments for `cond` is the `SerializedSnap` instead of Xstate convention of `(event, context) => boolean`
+     *
+     * @param snapId - The id of the snap to transition
+     * @param event - The event enum to use to transition
+     */
+    _transitionSnapState(snapId, event) {
+        var _a;
+        const snapStatus = this.state.snaps[snapId].status;
+        let nextStatus = (_a = snapStatusStateMachineConfig.states[snapStatus].on[event]) !== null && _a !== void 0 ? _a : snapStatus;
+        if (nextStatus.cond) {
+            const cond = nextStatus.cond(this.state.snaps[snapId]);
+            if (cond === false) {
+                throw new Error(`Condition failed for state transition "${snapId}" with event "${event}".`);
+            }
+        }
+        if (nextStatus.target) {
+            nextStatus = nextStatus.target;
+        }
+        if (nextStatus === snapStatus) {
+            return;
+        }
+        this.update((state) => {
+            state.snaps[snapId].status = nextStatus;
+        });
+    }
+    /**
+     * Starts the given snap. Throws an error if no such snap exists
+     * or if it is already running.
+     *
+     * @param snapId - The id of the Snap to start.
+     */
+    async startSnap(snapId) {
+        const snap = this.get(snapId);
+        if (!snap) {
+            throw new Error(`Snap "${snapId}" not found.`);
+        }
+        if (this.state.snaps[snapId].enabled === false) {
+            throw new Error(`Snap "${snapId}" is disabled.`);
+        }
+        await this._startSnap({
+            snapId,
+            sourceCode: snap.sourceCode,
+        });
+    }
+    /**
+     * Enables the given snap. A snap can only be started if it is enabled.
+     *
+     * @param snapId - The id of the Snap to enable.
+     */
+    enableSnap(snapId) {
+        this.update((state) => {
+            state.snaps[snapId].enabled = true;
+        });
+    }
+    /**
+     * Disables the given snap. A snap can only be started if it is enabled.
+     *
+     * @param snapId - The id of the Snap to disable.
+     */
+    disableSnap(snapId) {
+        this.update((state) => {
+            if (!state.snaps[snapId]) {
+                throw new Error(`Snap "${snapId}" not found.`);
+            }
+            state.snaps[snapId].enabled = false;
+        });
+        if (this.isRunning(snapId)) {
+            return this._stopSnap(snapId, SnapStatusEvent.stop);
+        }
+        return Promise.resolve();
+    }
+    /**
+     * Stops the given snap. Throws an error if no such snap exists
+     * or if it is already stopped.
+     *
+     * @param snapId - The id of the Snap to stop.
+     */
+    stopSnap(snapId) {
+        const snap = this.get(snapId);
+        if (!snap) {
+            throw new Error(`Snap "${snapId}" not found.`);
+        }
+        if (!this.isRunning(snapId)) {
+            throw new Error(`Snap "${snapId}" already stopped.`);
+        }
+        return this._stopSnap(snapId, SnapStatusEvent.stop).then(() => {
+            console.log(`Snap "${snapId}" stopped.`);
+        });
+    }
+    /**
+     * Stops the given snap, removes all hooks, closes all connections, and
+     * terminates its worker.
+     *
+     * @param snapId - The id of the Snap to stop.
+     * @param statusEvent - The Snap status event that caused the snap to be
+     * stopped.
+     */
+    async _stopSnap(snapId, statusEvent) {
+        const runtime = this._getSnapRuntimeData(snapId);
+        if (!runtime) {
+            return;
+        }
+        runtime.lastRequest = null;
+        try {
+            if (this.isRunning(snapId)) {
+                this._closeAllConnections(snapId);
+                await this._terminateSnap(snapId);
+            }
+        }
+        finally {
+            if (this.isRunning(snapId)) {
+                this._transitionSnapState(snapId, statusEvent);
+            }
+        }
+    }
+    /**
+     * Returns whether the given snap is running.
+     * Throws an error if the snap doesn't exist.
+     *
+     * @param snapId - The id of the Snap to check.
+     */
+    isRunning(snapId) {
+        const snap = this.get(snapId);
+        if (!snap) {
+            throw new Error(`Snap "${snapId}" not found.`);
+        }
+        return snap.status === SnapStatus.running;
+    }
+    /**
+     * Returns whether the given snap has been added to state.
+     *
+     * @param snapId - The id of the Snap to check for.
+     */
+    has(snapId) {
+        return Boolean(this.get(snapId));
+    }
+    /**
+     * Gets the snap with the given id if it exists, including all data.
+     * This should not be used if the snap is to be serializable, as e.g.
+     * the snap sourceCode may be quite large.
+     *
+     * @param snapId - The id of the Snap to get.
+     */
+    get(snapId) {
+        return this.state.snaps[snapId];
+    }
+    /**
+     * Gets the snap with the given id if it exists, excluding any
+     * non-serializable or expensive-to-serialize data.
+     *
+     * @param snapId - The id of the Snap to get.
+     */
+    getTruncated(snapId) {
+        const snap = this.get(snapId);
+        return snap
+            ? Object.keys(snap).reduce((serialized, key) => {
+                if (TRUNCATED_SNAP_PROPERTIES.has(key)) {
+                    serialized[key] = snap[key];
+                }
+                return serialized;
+            }, {})
+            : null;
+    }
+    /**
+     * Updates the own state of the snap with the given id.
+     * This is distinct from the state MetaMask uses to manage snaps.
+     *
+     * @param snapId - The id of the Snap whose state should be updated.
+     * @param newSnapState - The new state of the snap.
+     */
+    async updateSnapState(snapId, newSnapState) {
+        this.update((state) => {
+            state.snapStates[snapId] = newSnapState;
+        });
+    }
+    /**
+     * Adds error from a snap to the SnapControllers state.
+     *
+     * @param snapError - The error to store on the SnapController
+     */
+    addSnapError(snapError) {
+        this.update((state) => {
+            const id = nanoid_1.nanoid();
+            state.snapErrors[id] = Object.assign(Object.assign({}, snapError), { internalID: id });
+        });
+    }
+    /**
+     * Removes an error by internalID from a the SnapControllers state.
+     *
+     * @param internalID - The internal error ID to remove on the SnapController
+     */
+    async removeSnapError(internalID) {
+        this.update((state) => {
+            delete state.snapErrors[internalID];
+        });
+    }
+    /**
+     * Clears all errors from the SnapControllers state.
+     *
+     */
+    async clearSnapErrors() {
+        this.update((state) => {
+            state.snapErrors = {};
+        });
+    }
+    /**
+     * Gets the own state of the snap with the given id.
+     * This is distinct from the state MetaMask uses to manage snaps.
+     *
+     * @param snapId - The id of the Snap whose state to get.
+     */
+    async getSnapState(snapId) {
+        var _a;
+        return (_a = this.state.snapStates[snapId]) !== null && _a !== void 0 ? _a : null;
+    }
+    /**
+     * Completely clear the controller's state: delete all associated data,
+     * handlers, event listeners, and permissions; tear down all snap providers.
+     */
+    clearState() {
+        const snapIds = Object.keys(this.state.snaps);
+        snapIds.forEach((snapId) => {
+            this._closeAllConnections(snapId);
+        });
+        this._terminateAllSnaps();
+        snapIds.forEach(this.revokeAllSnapPermissions);
+        this.update((state) => {
+            state.snaps = {};
+            state.snapStates = {};
+        });
+    }
+    /**
+     * Removes the given snap from state, and clears all associated handlers
+     * and listeners.
+     *
+     * @param snapId - The id of the Snap.
+     */
+    async removeSnap(snapId) {
+        return this.removeSnaps([snapId]);
+    }
+    /**
+     * Stops the given snaps, removes them from state, and clears all associated
+     * permissions, handlers, and listeners.
+     *
+     * @param snapIds - The ids of the Snaps.
+     */
+    async removeSnaps(snapIds) {
+        if (!Array.isArray(snapIds)) {
+            throw new Error('Expected array of snap ids.');
+        }
+        await Promise.all(snapIds.map(async (snapId) => {
+            // Disable the snap and revoke all of its permissions before deleting
+            // it. This ensures that the snap will not be restarted or otherwise
+            // affect the host environment while we are deleting it.
+            await this.disableSnap(snapId);
+            this.revokeAllSnapPermissions(snapId);
+            this._snapsRuntimeData.delete(snapId);
+            this.update((state) => {
+                delete state.snaps[snapId];
+                delete state.snapStates[snapId];
+            });
+            this.messagingSystem.publish(`SnapController:snapRemoved`, snapId);
+        }));
+    }
+    /**
+     * Safely revokes all permissions granted to a Snap.
+     *
+     * @param snapId - The snap ID.
+     */
+    revokeAllSnapPermissions(snapId) {
+        if (this.messagingSystem.call('PermissionController:hasPermissions', snapId)) {
+            this.messagingSystem.call('PermissionController:revokeAllPermissions', snapId);
+        }
+    }
+    /**
+     * Gets the serialized permitted snaps of the given origin, if any.
+     * @param origin - The origin whose permitted snaps to retrieve.
+     */
+    getPermittedSnaps(origin) {
+        var _a;
+        return Object.values((_a = this.messagingSystem.call('PermissionController:getPermissions', origin)) !== null && _a !== void 0 ? _a : {}).reduce((permittedSnaps, perm) => {
+            if (perm.parentCapability.startsWith(exports.SNAP_PREFIX)) {
+                const snapId = perm.parentCapability.replace(exports.SNAP_PREFIX_REGEX, '');
+                const snap = this.getTruncated(snapId);
+                permittedSnaps[snapId] = snap || {
+                    error: eth_rpc_errors_1.serializeError(new Error('Snap permitted but not installed.')),
+                };
+            }
+            return permittedSnaps;
+        }, {});
+    }
+    /**
+     * Installs the snaps requested by the given origin, returning the snap
+     * object if the origin is permitted to install it, and an authorization error
+     * otherwise.
+     *
+     * @param origin - The origin that requested to install the snaps.
+     * @param requestedSnaps - The snaps to install.
+     * @returns An object of snap ids and snap objects, or errors if a
+     * snap couldn't be installed.
+     */
+    async installSnaps(origin, requestedSnaps) {
+        const result = {};
+        await Promise.all(Object.entries(requestedSnaps).map(async ([snapId, { version: rawVersion }]) => {
+            const version = utils_2.resolveVersion(rawVersion);
+            const permissionName = exports.SNAP_PREFIX + snapId;
+            if (!isValidSnapVersionRange(version)) {
+                result[snapId] = {
+                    error: eth_rpc_errors_1.ethErrors.rpc.invalidParams(`The "version" field must be a valid SemVer version range if specified. Received: "${version}".`),
+                };
+                return;
+            }
+            if (this.messagingSystem.call('PermissionController:hasPermission', origin, permissionName)) {
+                // Attempt to install and run the snap, storing any errors that
+                // occur during the process.
+                result[snapId] = Object.assign({}, (await this.processRequestedSnap(snapId, version)));
+            }
+            else {
+                // only allow the installation of permitted snaps
+                result[snapId] = {
+                    error: eth_rpc_errors_1.ethErrors.provider.unauthorized(`Not authorized to install snap "${snapId}". Request the permission for the snap before attempting to install it.`),
+                };
+            }
+        }));
+        return result;
+    }
+    /**
+     * Adds, authorizes, and runs the given snap with a snap provider.
+     * Results from this method should be efficiently serializable.
+     *
+     * @param snapId - The id of the snap.
+     * @param version - The version of the snap to install.
+     * @returns The resulting snap object, or an error if something went wrong.
+     */
+    async processRequestedSnap(snapId, version) {
+        const existingSnap = this.getTruncated(snapId);
+        // For devX we always re-install local snaps.
+        if (existingSnap && !snapId.startsWith(utils_2.SnapIdPrefixes.local)) {
+            if (semver_1.satisfies(existingSnap.version, version)) {
+                return existingSnap;
+            }
+            return {
+                error: eth_rpc_errors_1.ethErrors.rpc.invalidParams(`Version mismatch with already installed snap. ${snapId}@${existingSnap.version} doesn't satisfy requested version ${version}`),
+            };
+        }
+        // Existing snaps must be stopped before overwriting
+        if (existingSnap && this.isRunning(snapId)) {
+            await this._stopSnap(snapId, SnapStatusEvent.stop);
+        }
+        try {
+            const { sourceCode } = await this.add({
+                id: snapId,
+                version,
+            });
+            await this.authorize(snapId);
+            await this._startSnap({
+                snapId,
+                sourceCode,
+            });
+            this.messagingSystem.publish(`SnapController:snapInstalled`, snapId);
+            return this.getTruncated(snapId);
+        }
+        catch (err) {
+            console.error(`Error when adding snap.`, err);
+            if (this.has(snapId)) {
+                this.removeSnap(snapId);
+            }
+            return { error: eth_rpc_errors_1.serializeError(err) };
+        }
+    }
+    /**
+     * Returns a promise representing the complete installation of the requested snap.
+     * If the snap is already being installed, the previously pending promise will be returned.
+     *
+     * @param snapId - The id of the Snap.
+     * @param args - Object containing either the URL of the snap's manifest,
+     * or the snap's manifest and source code.
+     * @returns The resulting snap object.
+     */
+    add(args) {
+        const { id: _snapId } = args;
+        this.validateSnapId(_snapId);
+        const snapId = _snapId;
+        if (!args ||
+            !('id' in args) ||
+            (!('manifest' in args) && 'sourceCode' in args) ||
+            ('manifest' in args && !('sourceCode' in args))) {
+            throw new Error(`Invalid add snap args for snap "${snapId}".`);
+        }
+        const runtime = this._getSnapRuntimeData(snapId);
+        if (!runtime.installPromise) {
+            console.log(`Adding snap: ${snapId}`);
+            runtime.installPromise = this._add(args);
+        }
+        return runtime.installPromise;
+    }
+    validateSnapId(snapId) {
+        if (!snapId || typeof snapId !== 'string') {
+            throw new Error(`Invalid snap id: Not a string. Received "${snapId}"`);
+        }
+        for (const prefix of Object.values(utils_2.SnapIdPrefixes)) {
+            if (snapId.startsWith(prefix) && snapId.replace(prefix, '').length > 0) {
+                return;
+            }
+        }
+        throw new Error(`Invalid snap id. Received: "${snapId}"`);
+    }
+    async _startSnap(snapData) {
+        const { snapId } = snapData;
+        if (this.isRunning(snapId)) {
+            throw new Error(`Snap "${snapId}" is already started.`);
+        }
+        const result = await this._executeSnap(Object.assign(Object.assign({}, snapData), { endowments: await this._getEndowments(snapId) }));
+        this._transitionSnapState(snapId, SnapStatusEvent.start);
+        return result;
+    }
+    /**
+     * Gets the names of all endowments that will be added to the Snap's
+     * Compartment when it executes. These should be the names of global
+     * JavaScript APIs accessible in the root realm of the execution environment.
+     *
+     * Throws an error if the endowment getter for a permission returns a truthy
+     * value that is not an array of strings.
+     *
+     * @param snapId - The id of the snap whose SES endowments to get.
+     * @returns An array of the names of the endowments.
+     */
+    async _getEndowments(snapId) {
+        let allEndowments = [];
+        for (const permissionName of this._endowmentPermissionNames) {
+            if (this.messagingSystem.call('PermissionController:hasPermission', snapId, permissionName)) {
+                const endowments = await this.messagingSystem.call('PermissionController:getEndowments', snapId, permissionName);
+                if (endowments) {
+                    // We don't have any guarantees about the type of the endowments
+                    // value, so we have to guard at runtime.
+                    if (!Array.isArray(endowments) ||
+                        endowments.some((value) => typeof value !== 'string')) {
+                        throw new Error('Expected an array of string endowment names.');
+                    }
+                    allEndowments = allEndowments.concat(endowments);
+                }
+            }
+        }
+        const deduped = [...new Set([...exports.DEFAULT_EXPOSED_APIS, ...allEndowments])];
+        if (deduped.length < exports.DEFAULT_EXPOSED_APIS.length + allEndowments.length) {
+            console.error('Duplicates found in endowments, default APIs should not be requested.', allEndowments);
+        }
+        return deduped;
+    }
+    /**
+     * Internal method. See the "add" method.
+     *
+     * @param snapId - The id of the Snap.
+     * @param args - The add snap args.
+     * @returns The resulting snap object.
+     */
+    async _add(args) {
+        const { id: snapId, version = utils_2.DEFAULT_REQUESTED_SNAP_VERSION } = args;
+        let manifest, sourceCode, svgIcon;
+        if ('manifest' in args) {
+            manifest = args.manifest;
+            sourceCode = args.sourceCode;
+            json_schemas_1.validateSnapJsonFile(utils_2.NpmSnapFileNames.Manifest, manifest);
+        }
+        else {
+            ({ manifest, sourceCode, svgIcon } = await this._fetchSnap(snapId, version));
+        }
+        if (!semver_1.satisfies(manifest.version, version)) {
+            throw new Error(`Version mismatch. Manifest for ${snapId} specifies version ${manifest.version} which doesn't satisfy requested version range ${version}`);
+        }
+        if (typeof sourceCode !== 'string' || sourceCode.length === 0) {
+            throw new Error(`Invalid source code for snap "${snapId}".`);
+        }
+        const initialPermissions = manifest === null || manifest === void 0 ? void 0 : manifest.initialPermissions;
+        if (!initialPermissions ||
+            typeof initialPermissions !== 'object' ||
+            Array.isArray(initialPermissions)) {
+            throw new Error(`Invalid initial permissions for snap "${snapId}".`);
+        }
+        let snap = {
+            enabled: true,
+            id: snapId,
+            initialPermissions,
+            manifest,
+            permissionName: exports.SNAP_PREFIX + snapId,
+            sourceCode,
+            status: snapStatusStateMachineConfig.initial,
+            version: manifest.version,
+        };
+        const snapsState = this.state.snaps;
+        // restore relevant snap state if it exists
+        if (snapsState[snapId]) {
+            snap = Object.assign(Object.assign({}, snapsState[snapId]), snap);
+        }
+        // store the snap back in state
+        this.update((state) => {
+            state.snaps[snapId] = snap;
+        });
+        this.messagingSystem.publish(`SnapController:snapAdded`, snapId, snap, svgIcon);
+        return snap;
+    }
+    /**
+     * Fetches the manifest and source code of a snap.
+     *
+     * @param snapId - The id of the Snap.
+     * @param version - The version of the Snap to fetch.
+     * @returns A tuple of the Snap manifest object and the Snap source code.
+     */
+    async _fetchSnap(snapId, version) {
+        try {
+            if (snapId.startsWith(utils_2.SnapIdPrefixes.local)) {
+                return this._fetchLocalSnap(snapId.replace(utils_2.SnapIdPrefixes.local, ''));
+            }
+            else if (snapId.startsWith(utils_2.SnapIdPrefixes.npm)) {
+                return this._fetchNpmSnap(snapId.replace(utils_2.SnapIdPrefixes.npm, ''), version);
+            }
+            // This should be impossible.
+            /* istanbul ignore next */
+            throw new Error(`Invalid Snap id: "${snapId}"`);
+        }
+        catch (error) {
+            throw new Error(`Failed to fetch Snap "${snapId}": ${error.message}`);
+        }
+    }
+    async _fetchNpmSnap(packageName, version) {
+        if (!isValidSnapVersionRange(version)) {
+            throw new Error(`Received invalid Snap version range: "${version}".`);
+        }
+        const { manifest, sourceCode, svgIcon } = await utils_2.fetchNpmSnap(packageName, version, this._npmRegistryUrl);
+        return { manifest, sourceCode, svgIcon };
+    }
+    /**
+     * Fetches the manifest and source code of a local snap.
+     *
+     * @param localhostUrl - The localhost URL to download from.
+     * @returns The validated manifest and the source code.
+     */
+    async _fetchLocalSnap(localhostUrl) {
+        // Local snaps are mostly used for development purposes. Fetches were cached in the browser and were not requested
+        // afterwards which lead to confusing development where old versions of snaps were installed.
+        // Thus we disable caching
+        const fetchOptions = { cache: 'no-cache' };
+        const manifestUrl = new URL(utils_2.NpmSnapFileNames.Manifest, localhostUrl);
+        if (!utils_2.LOCALHOST_HOSTNAMES.has(manifestUrl.hostname)) {
+            throw new Error(`Invalid URL: Locally hosted Snaps must be hosted on localhost. Received URL: "${manifestUrl.toString()}"`);
+        }
+        const _manifest = await (await utils_2.fetchContent(manifestUrl.toString(), fetchOptions)).json();
+        json_schemas_1.validateSnapJsonFile(utils_2.NpmSnapFileNames.Manifest, _manifest);
+        const manifest = _manifest;
+        const { source: { location: { npm: { filePath, iconPath }, }, }, } = manifest;
+        const [sourceCode, svgIcon] = await Promise.all([
+            (await utils_2.fetchContent(new URL(filePath, localhostUrl).toString(), fetchOptions)).text(),
+            iconPath
+                ? (await utils_2.fetchContent(new URL(iconPath, localhostUrl).toString(), fetchOptions)).text()
+                : undefined,
+        ]);
+        utils_2.validateSnapShasum(manifest, sourceCode);
+        return { manifest, sourceCode, svgIcon };
+    }
+    /**
+     * Initiates a request for the given snap's initial permissions.
+     * Must be called in order. See processRequestedSnap.
+     *
+     * @param snapId - The id of the Snap.
+     * @returns The snap's approvedPermissions.
+     */
+    async authorize(snapId) {
+        console.log(`Authorizing snap: ${snapId}`);
+        const snapsState = this.state.snaps;
+        const snap = snapsState[snapId];
+        const { initialPermissions } = snap;
+        // Don't prompt if there are no permissions requested:
+        if (Object.keys(initialPermissions).length === 0) {
+            return [];
+        }
+        if (initialPermissions === null) {
+            return [];
+        }
+        try {
+            const [approvedPermissions] = await this.messagingSystem.call('PermissionController:requestPermissions', { origin: snapId }, initialPermissions);
+            return Object.values(approvedPermissions).map((perm) => perm.parentCapability);
+        }
+        finally {
+            const runtime = this._getSnapRuntimeData(snapId);
+            runtime.installPromise = null;
+        }
+    }
+    destroy() {
+        super.destroy();
+        if (this._timeoutForLastRequestStatus) {
+            clearTimeout(this._timeoutForLastRequestStatus);
+        }
+        this.messagingSystem.unsubscribe('ExecutionService:unhandledError', this._onUnhandledSnapError);
+        this.messagingSystem.unsubscribe('ExecutionService:unresponsive', this._onUnresponsiveSnap);
+    }
+    /**
+     * Gets the RPC message handler for the given snap.
+     *
+     * @param snapId - The id of the Snap whose message handler to get.
+     */
+    async getRpcMessageHandler(snapId) {
+        const runtime = this._getSnapRuntimeData(snapId);
+        const existingHandler = runtime === null || runtime === void 0 ? void 0 : runtime.rpcHandler;
+        if (existingHandler) {
+            return existingHandler;
+        }
+        const rpcHandler = async (origin, request) => {
+            let handler = await this._getRpcMessageHandler(snapId);
+            if (this.state.snaps[snapId].enabled === false) {
+                throw new Error(`Snap "${snapId}" is disabled.`);
+            }
+            if (this.state.snaps[snapId].status === SnapStatus.installing) {
+                throw new Error(`Snap "${snapId}" has not been started yet.`);
+            }
+            if (!handler && this.isRunning(snapId) === false) {
+                // cold start
+                await this.startSnap(snapId);
+                handler = await this._getRpcMessageHandler(snapId);
+            }
+            if (!handler) {
+                throw new Error(`Snap execution service returned no RPC handler for running snap "${snapId}".`);
+            }
+            let _request = request;
+            if (!Object.hasOwnProperty.call(request, 'jsonrpc')) {
+                _request = Object.assign(Object.assign({}, request), { jsonrpc: '2.0' });
+            }
+            else if (request.jsonrpc !== '2.0') {
+                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({
+                    message: 'Invalid "jsonrpc" property. Must be "2.0" if provided.',
+                    data: request.jsonrpc,
+                });
+            }
+            this._recordSnapRpcRequest(snapId);
+            // Handle max request time
+            let timeout;
+            const timeoutPromise = new Promise((_resolve, reject) => {
+                timeout = setTimeout(() => {
+                    this._stopSnap(snapId, SnapStatusEvent.stop);
+                    reject(new Error('The request timed out.'));
+                }, this._maxRequestTime);
+            });
+            // This will either get the result or reject due to the timeout.
+            const result = await Promise.race([
+                handler(origin, _request),
+                timeoutPromise,
+            ]);
+            clearTimeout(timeout);
+            return result;
+        };
+        runtime.rpcHandler = rpcHandler;
+        return rpcHandler;
+    }
+    _recordSnapRpcRequest(snapId) {
+        const runtime = this._getSnapRuntimeData(snapId);
+        runtime.lastRequest = Date.now();
+    }
+    _getSnapRuntimeData(snapId) {
+        if (!this._snapsRuntimeData.has(snapId)) {
+            this._snapsRuntimeData.set(snapId, {
+                lastRequest: null,
+                rpcHandler: null,
+                installPromise: null,
+            });
+        }
+        return this._snapsRuntimeData.get(snapId);
+    }
+}
+exports.SnapController = SnapController;
+function isValidSnapVersionRange(version) {
+    return Boolean(typeof version === 'string' && semver_1.validRange(version) !== null);
+}
+//# sourceMappingURL=SnapController.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js.map
new file mode 100644
index 0000000..2ce09a6
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/SnapController.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"SnapController.js","sourceRoot":"","sources":["../../src/snaps/SnapController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.d.ts
new file mode 100644
index 0000000..a3c4f97
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.d.ts
@@ -0,0 +1,3 @@
+export * from './SnapController';
+export * from './json-schemas';
+export * from './utils';
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js
new file mode 100644
index 0000000..99b71b9
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js
@@ -0,0 +1,16 @@
+"use strict";
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
+}) : (function(o, m, k, k2) {
+    if (k2 === undefined) k2 = k;
+    o[k2] = m[k];
+}));
+var __exportStar = (this && this.__exportStar) || function(m, exports) {
+    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+__exportStar(require("./SnapController"), exports);
+__exportStar(require("./json-schemas"), exports);
+__exportStar(require("./utils"), exports);
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js.map
new file mode 100644
index 0000000..8ef59d7
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/snaps/index.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mDAAiC;AACjC,iDAA+B;AAC/B,0CAAwB"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.d.ts
new file mode 100644
index 0000000..0d2fb7e
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.d.ts
@@ -0,0 +1,25 @@
+declare type Version = string;
+declare type PackageName = string;
+declare type Private = boolean;
+declare type Main = string;
+declare type StringDj4X5WuP = string;
+declare type StringXp6NyS6W = "https://registry.npmjs.org" | "https://registry.npmjs.org/";
+declare type PublishConfig = {
+    access?: StringDj4X5WuP;
+    registry: StringXp6NyS6W;
+    [k: string]: any;
+};
+declare type Repository = {
+    type: StringDj4X5WuP;
+    url: StringDj4X5WuP;
+};
+export declare type NpmSnapPackageJson = {
+    version: Version;
+    name: PackageName;
+    private?: Private;
+    main?: Main;
+    publishConfig?: PublishConfig;
+    repository?: Repository;
+    [k: string]: any;
+};
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js
new file mode 100644
index 0000000..89a795c
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js
@@ -0,0 +1,4 @@
+"use strict";
+// THIS IS A PROGRAMMATICALLY GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+Object.defineProperty(exports, "__esModule", { value: true });
+//# sourceMappingURL=NpmSnapPackageJson.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js.map
new file mode 100644
index 0000000..0a9004a
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/NpmSnapPackageJson.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"NpmSnapPackageJson.js","sourceRoot":"","sources":["../../../src/snaps/json-schemas/NpmSnapPackageJson.ts"],"names":[],"mappings":";AAAA,6EAA6E"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.d.ts
new file mode 100644
index 0000000..7513be5
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.d.ts
@@ -0,0 +1,107 @@
+/**
+ *
+ * MUST be a valid SemVer version string and equal to the corresponding `package.json` field.
+ *
+ */
+declare type Version = string;
+/**
+ *
+ * MUST be a non-empty string less than or equal to 280 characters. A short description of the Snap.
+ *
+ */
+declare type Description = string;
+/**
+ *
+ * MUST be a string less than or equal to 214 characters. The Snap author's proposed name for the Snap. The Snap host application may display this name unmodified in its user interface. The proposed name SHOULD be human-readable.
+ *
+ */
+declare type ProposedName = string;
+declare type NullQu0Arl1F = null;
+declare type StringDj4X5WuP = string;
+declare type ObjectOfStringDj4X5WuPStringDj4X5WuPHQwLk7Md = {
+    type: StringDj4X5WuP;
+    url: StringDj4X5WuP;
+};
+/**
+ *
+ * MAY be omitted. If present, MUST be equal to the corresponding package.json field.
+ *
+ */
+declare type Repository = NullQu0Arl1F | ObjectOfStringDj4X5WuPStringDj4X5WuPHQwLk7Md;
+/**
+ *
+ * MUST be the Base64-encoded string representation of the SHA-256 hash of the Snap source file.
+ *
+ */
+declare type StringFpP4DSlq = string;
+/**
+ *
+ * The path to the Snap bundle file from the project root directory.
+ *
+ */
+declare type FilePath = string;
+/**
+ *
+ * The path to an .svg file from the project root directory.
+ *
+ */
+declare type IconPath = string;
+/**
+ *
+ * The Snap's npm package name.
+ *
+ */
+declare type PackageName = string;
+/**
+ *
+ * The npm registry URL.
+ *
+ */
+declare type NpmRegistry = "https://registry.npmjs.org" | "https://registry.npmjs.org/";
+declare type Npm = {
+    filePath: FilePath;
+    iconPath?: IconPath;
+    packageName: PackageName;
+    registry: NpmRegistry;
+};
+declare type SourceLocation = {
+    npm: Npm;
+};
+/**
+ *
+ * Specifies some Snap metadata and where to fetch the Snap during installation.
+ *
+ */
+declare type Source = {
+    shasum: StringFpP4DSlq;
+    location: SourceLocation;
+};
+/**
+ *
+ * MUST be a valid EIP-2255 wallet_requestPermissions parameter object, specifying the initial permissions that will be requested when the Snap is added to the host application.
+ *
+ */
+declare type InitialPermissions = {
+    [key: string]: any;
+};
+/**
+ *
+ * The Snap manifest specification version targeted by the manifest.
+ *
+ */
+declare type ManifestVersion = "0.1";
+/**
+ *
+ * The Snap manifest file MUST be named `snap.manifest.json` and located in the package root directory.
+ *
+ */
+export declare type SnapManifest = {
+    version: Version;
+    description: Description;
+    proposedName: ProposedName;
+    repository?: Repository;
+    source: Source;
+    initialPermissions: InitialPermissions;
+    manifestVersion: ManifestVersion;
+};
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js
new file mode 100644
index 0000000..80c4e63
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js
@@ -0,0 +1,4 @@
+"use strict";
+// THIS IS A PROGRAMMATICALLY GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
+Object.defineProperty(exports, "__esModule", { value: true });
+//# sourceMappingURL=SnapManifest.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js.map
new file mode 100644
index 0000000..ae2ac64
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/SnapManifest.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"SnapManifest.js","sourceRoot":"","sources":["../../../src/snaps/json-schemas/SnapManifest.ts"],"names":[],"mappings":";AAAA,6EAA6E"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.d.ts
new file mode 100644
index 0000000..91fa475
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.d.ts
@@ -0,0 +1,11 @@
+import { NpmSnapFileNames } from '../utils';
+export { NpmSnapPackageJson } from './NpmSnapPackageJson';
+export { SnapManifest } from './SnapManifest';
+/**
+ * Validates a Snap JSON file. Throws a human-readable list of errors if
+ * validation fails.
+ *
+ * @param fileName - The name of Snap JSON file to validate.
+ * @param content - The contents of the file.
+ */
+export declare function validateSnapJsonFile(fileName: NpmSnapFileNames, content: unknown): void;
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js
new file mode 100644
index 0000000..68932a2
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js
@@ -0,0 +1,47 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.validateSnapJsonFile = void 0;
+const validateNpmSnapPackageJson_js_1 = __importDefault(require("./validateNpmSnapPackageJson.js"));
+const validateSnapManifest_js_1 = __importDefault(require("./validateSnapManifest.js"));
+const utils_1 = require("../utils");
+/**
+ * Validates a Snap JSON file. Throws a human-readable list of errors if
+ * validation fails.
+ *
+ * @param fileName - The name of Snap JSON file to validate.
+ * @param content - The contents of the file.
+ */
+function validateSnapJsonFile(fileName, content) {
+    let errors;
+    switch (fileName) {
+        case utils_1.NpmSnapFileNames.Manifest:
+            if (content && typeof content === 'object' && !Array.isArray(content)) {
+                if (content.repository === undefined) {
+                    // We do this to allow consumers to omit this field. We cannot omit
+                    // it internally due to TS@<4.4 limitations.
+                    content.repository = null;
+                }
+            }
+            errors = validateSnapManifest_js_1.default(content);
+            break;
+        case utils_1.NpmSnapFileNames.PackageJson:
+            errors = validateNpmSnapPackageJson_js_1.default(content);
+            break;
+        default:
+            throw new Error(`Unrecognized file name "${fileName}".`);
+    }
+    if (errors && errors.length !== 0) {
+        throw new Error(`${errors.reduce((allErrors, errorObject = {}) => {
+            const { instancePath, message = 'unknown error' } = errorObject;
+            const currentString = instancePath
+                ? `\t${instancePath}\n\t${message}\n\n`
+                : `\t${message}\n\n`;
+            return `${allErrors}${currentString}`;
+        }, '').replace(/\n$/u, '')}`);
+    }
+}
+exports.validateSnapJsonFile = validateSnapJsonFile;
+//# sourceMappingURL=index.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js.map
new file mode 100644
index 0000000..5e641f6
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/index.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/snaps/json-schemas/index.ts"],"names":[],"mappings":";;;;;;AAAA,oGAAyE;AACzE,wFAA6D;AAE7D,oCAA4C;AAK5C;;;;;;GAMG;AACH,SAAgB,oBAAoB,CAAC,QAA0B,EAAE,OAAgB;IAC/E,IAAI,MAAM,CAAC;IACX,QAAQ,QAAQ,EAAE;QAChB,KAAK,wBAAgB,CAAC,QAAQ;YAC5B,IAAI,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACrE,IAAK,OAAe,CAAC,UAAU,KAAK,SAAS,EAAE;oBAC7C,mEAAmE;oBACnE,4CAA4C;oBAC3C,OAAe,CAAC,UAAU,GAAG,IAAI,CAAC;iBACpC;aACF;YAED,MAAM,GAAG,iCAAoB,CAAC,OAAO,CAAC,CAAC;YACvC,MAAM;QACR,KAAK,wBAAgB,CAAC,WAAW;YAC/B,MAAM,GAAG,uCAA0B,CAAC,OAAO,CAAC,CAAC;YAC7C,MAAM;QACR;YACE,MAAM,IAAI,KAAK,CAAC,2BAA2B,QAAQ,IAAI,CAAC,CAAC;KAC5D;IAED,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,GACd,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,cAA2D,EAAE,EAAE,EAAE;YACzF,MAAM,EAAE,YAAY,EAAE,OAAO,GAAG,eAAe,EAAE,GAAG,WAAW,CAAC;YAChE,MAAM,aAAa,GAAG,YAAY;gBAChC,CAAC,CAAC,KAAK,YAAY,OAAO,OAAO,MAAM;gBACvC,CAAC,CAAC,KAAK,OAAO,MAAM,CAAA;YAEtB,OAAO,GAAG,SAAS,GAAG,aAAa,EAAE,CAAA;QACvC,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAC3B,EAAE,CAAC,CAAA;KACJ;AACH,CAAC;AAjCD,oDAiCC"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.d.ts
new file mode 100644
index 0000000..7eb498a
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.d.ts
@@ -0,0 +1,58 @@
+export = validate20;
+declare function validate20(data: any, { instancePath, parentData, parentDataProperty, rootData }?: {
+    instancePath?: string | undefined;
+    parentData: any;
+    parentDataProperty: any;
+    rootData?: any;
+}): {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        missingProperty: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        pattern: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        type: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        limit: number;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        allowedValues: string[];
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        additionalProperty: string;
+    };
+    message: string;
+}[] | null;
+declare namespace validate20 {
+    export { validate20 as default };
+}
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js
new file mode 100644
index 0000000..16e32b9
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js
@@ -0,0 +1,318 @@
+"use strict";
+module.exports = validate20;
+module.exports.default = validate20;
+const schema22 = { "title": "npm Snap package.json", "type": "object", "required": ["version", "name"], "properties": { "version": { "type": "string", "title": "Version", "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" }, "name": { "type": "string", "title": "Package Name", "minLength": 1, "maxLength": 214, "pattern": "^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*$" }, "private": { "type": "boolean", "title": "Private" }, "main": { "type": "string", "title": "Main", "minLength": 1 }, "publishConfig": { "type": "object", "title": "Publish Config", "required": ["registry"], "properties": { "access": { "type": "string", "minLength": 1 }, "registry": { "type": "string", "enum": ["https://registry.npmjs.org", "https://registry.npmjs.org/"] } } }, "repository": { "type": "object", "title": "Repository", "additionalProperties": false, "required": ["type", "url"], "properties": { "type": { "type": "string", "minLength": 1 }, "url": { "type": "string", "minLength": 1 } } } } };
+const pattern0 = new RegExp("^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$", "u");
+const pattern1 = new RegExp("^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*$", "u");
+const func8 = require("ajv/dist/runtime/ucs2length").default;
+const func0 = require("ajv/dist/runtime/equal").default;
+function validate20(data, { instancePath = "", parentData, parentDataProperty, rootData = data } = {}) { let vErrors = null; let errors = 0; if (data && typeof data == "object" && !Array.isArray(data)) {
+    if (data.version === undefined) {
+        const err0 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "version" }, message: "must have required property '" + "version" + "'" };
+        if (vErrors === null) {
+            vErrors = [err0];
+        }
+        else {
+            vErrors.push(err0);
+        }
+        errors++;
+    }
+    if (data.name === undefined) {
+        const err1 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "name" }, message: "must have required property '" + "name" + "'" };
+        if (vErrors === null) {
+            vErrors = [err1];
+        }
+        else {
+            vErrors.push(err1);
+        }
+        errors++;
+    }
+    if (data.version !== undefined) {
+        let data0 = data.version;
+        if (typeof data0 === "string") {
+            if (!pattern0.test(data0)) {
+                const err2 = { instancePath: instancePath + "/version", schemaPath: "#/properties/version/pattern", keyword: "pattern", params: { pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" }, message: "must match pattern \"" + "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" + "\"" };
+                if (vErrors === null) {
+                    vErrors = [err2];
+                }
+                else {
+                    vErrors.push(err2);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err3 = { instancePath: instancePath + "/version", schemaPath: "#/properties/version/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err3];
+            }
+            else {
+                vErrors.push(err3);
+            }
+            errors++;
+        }
+    }
+    if (data.name !== undefined) {
+        let data1 = data.name;
+        if (typeof data1 === "string") {
+            if (func8(data1) > 214) {
+                const err4 = { instancePath: instancePath + "/name", schemaPath: "#/properties/name/maxLength", keyword: "maxLength", params: { limit: 214 }, message: "must NOT have more than 214 characters" };
+                if (vErrors === null) {
+                    vErrors = [err4];
+                }
+                else {
+                    vErrors.push(err4);
+                }
+                errors++;
+            }
+            if (func8(data1) < 1) {
+                const err5 = { instancePath: instancePath + "/name", schemaPath: "#/properties/name/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                if (vErrors === null) {
+                    vErrors = [err5];
+                }
+                else {
+                    vErrors.push(err5);
+                }
+                errors++;
+            }
+            if (!pattern1.test(data1)) {
+                const err6 = { instancePath: instancePath + "/name", schemaPath: "#/properties/name/pattern", keyword: "pattern", params: { pattern: "^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*$" }, message: "must match pattern \"" + "^(?:@[a-z0-9-*~][a-z0-9-*._~]*/)?[a-z0-9-~][a-z0-9-._~]*$" + "\"" };
+                if (vErrors === null) {
+                    vErrors = [err6];
+                }
+                else {
+                    vErrors.push(err6);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err7 = { instancePath: instancePath + "/name", schemaPath: "#/properties/name/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err7];
+            }
+            else {
+                vErrors.push(err7);
+            }
+            errors++;
+        }
+    }
+    if (data.private !== undefined) {
+        if (typeof data.private !== "boolean") {
+            const err8 = { instancePath: instancePath + "/private", schemaPath: "#/properties/private/type", keyword: "type", params: { type: "boolean" }, message: "must be boolean" };
+            if (vErrors === null) {
+                vErrors = [err8];
+            }
+            else {
+                vErrors.push(err8);
+            }
+            errors++;
+        }
+    }
+    if (data.main !== undefined) {
+        let data3 = data.main;
+        if (typeof data3 === "string") {
+            if (func8(data3) < 1) {
+                const err9 = { instancePath: instancePath + "/main", schemaPath: "#/properties/main/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                if (vErrors === null) {
+                    vErrors = [err9];
+                }
+                else {
+                    vErrors.push(err9);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err10 = { instancePath: instancePath + "/main", schemaPath: "#/properties/main/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err10];
+            }
+            else {
+                vErrors.push(err10);
+            }
+            errors++;
+        }
+    }
+    if (data.publishConfig !== undefined) {
+        let data4 = data.publishConfig;
+        if (data4 && typeof data4 == "object" && !Array.isArray(data4)) {
+            if (data4.registry === undefined) {
+                const err11 = { instancePath: instancePath + "/publishConfig", schemaPath: "#/properties/publishConfig/required", keyword: "required", params: { missingProperty: "registry" }, message: "must have required property '" + "registry" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err11];
+                }
+                else {
+                    vErrors.push(err11);
+                }
+                errors++;
+            }
+            if (data4.access !== undefined) {
+                let data5 = data4.access;
+                if (typeof data5 === "string") {
+                    if (func8(data5) < 1) {
+                        const err12 = { instancePath: instancePath + "/publishConfig/access", schemaPath: "#/properties/publishConfig/properties/access/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err12];
+                        }
+                        else {
+                            vErrors.push(err12);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err13 = { instancePath: instancePath + "/publishConfig/access", schemaPath: "#/properties/publishConfig/properties/access/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err13];
+                    }
+                    else {
+                        vErrors.push(err13);
+                    }
+                    errors++;
+                }
+            }
+            if (data4.registry !== undefined) {
+                let data6 = data4.registry;
+                if (typeof data6 !== "string") {
+                    const err14 = { instancePath: instancePath + "/publishConfig/registry", schemaPath: "#/properties/publishConfig/properties/registry/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err14];
+                    }
+                    else {
+                        vErrors.push(err14);
+                    }
+                    errors++;
+                }
+                if (!((data6 === "https://registry.npmjs.org") || (data6 === "https://registry.npmjs.org/"))) {
+                    const err15 = { instancePath: instancePath + "/publishConfig/registry", schemaPath: "#/properties/publishConfig/properties/registry/enum", keyword: "enum", params: { allowedValues: schema22.properties.publishConfig.properties.registry.enum }, message: "must be equal to one of the allowed values" };
+                    if (vErrors === null) {
+                        vErrors = [err15];
+                    }
+                    else {
+                        vErrors.push(err15);
+                    }
+                    errors++;
+                }
+            }
+        }
+        else {
+            const err16 = { instancePath: instancePath + "/publishConfig", schemaPath: "#/properties/publishConfig/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+            if (vErrors === null) {
+                vErrors = [err16];
+            }
+            else {
+                vErrors.push(err16);
+            }
+            errors++;
+        }
+    }
+    if (data.repository !== undefined) {
+        let data7 = data.repository;
+        if (data7 && typeof data7 == "object" && !Array.isArray(data7)) {
+            if (data7.type === undefined) {
+                const err17 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/required", keyword: "required", params: { missingProperty: "type" }, message: "must have required property '" + "type" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err17];
+                }
+                else {
+                    vErrors.push(err17);
+                }
+                errors++;
+            }
+            if (data7.url === undefined) {
+                const err18 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/required", keyword: "required", params: { missingProperty: "url" }, message: "must have required property '" + "url" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err18];
+                }
+                else {
+                    vErrors.push(err18);
+                }
+                errors++;
+            }
+            for (const key0 in data7) {
+                if (!((key0 === "type") || (key0 === "url"))) {
+                    const err19 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key0 }, message: "must NOT have additional properties" };
+                    if (vErrors === null) {
+                        vErrors = [err19];
+                    }
+                    else {
+                        vErrors.push(err19);
+                    }
+                    errors++;
+                }
+            }
+            if (data7.type !== undefined) {
+                let data8 = data7.type;
+                if (typeof data8 === "string") {
+                    if (func8(data8) < 1) {
+                        const err20 = { instancePath: instancePath + "/repository/type", schemaPath: "#/properties/repository/properties/type/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err20];
+                        }
+                        else {
+                            vErrors.push(err20);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err21 = { instancePath: instancePath + "/repository/type", schemaPath: "#/properties/repository/properties/type/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err21];
+                    }
+                    else {
+                        vErrors.push(err21);
+                    }
+                    errors++;
+                }
+            }
+            if (data7.url !== undefined) {
+                let data9 = data7.url;
+                if (typeof data9 === "string") {
+                    if (func8(data9) < 1) {
+                        const err22 = { instancePath: instancePath + "/repository/url", schemaPath: "#/properties/repository/properties/url/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err22];
+                        }
+                        else {
+                            vErrors.push(err22);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err23 = { instancePath: instancePath + "/repository/url", schemaPath: "#/properties/repository/properties/url/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err23];
+                    }
+                    else {
+                        vErrors.push(err23);
+                    }
+                    errors++;
+                }
+            }
+        }
+        else {
+            const err24 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+            if (vErrors === null) {
+                vErrors = [err24];
+            }
+            else {
+                vErrors.push(err24);
+            }
+            errors++;
+        }
+    }
+}
+else {
+    const err25 = { instancePath, schemaPath: "#/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+    if (vErrors === null) {
+        vErrors = [err25];
+    }
+    else {
+        vErrors.push(err25);
+    }
+    errors++;
+} validate20.errors = vErrors; return vErrors; }
+//# sourceMappingURL=validateNpmSnapPackageJson.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js.map
new file mode 100644
index 0000000..5260610
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateNpmSnapPackageJson.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"validateNpmSnapPackageJson.js","sourceRoot":"","sources":["../../../src/snaps/json-schemas/validateNpmSnapPackageJson.js"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.d.ts
new file mode 100644
index 0000000..e6bcecb
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.d.ts
@@ -0,0 +1,66 @@
+export = validate20;
+declare function validate20(data: any, { instancePath, parentData, parentDataProperty, rootData }?: {
+    instancePath?: string | undefined;
+    parentData: any;
+    parentDataProperty: any;
+    rootData?: any;
+}): {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        missingProperty: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        additionalProperty: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        pattern: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        type: string;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        limit: number;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        passingSchemas: number | (number | null)[] | null;
+    };
+    message: string;
+}[] | {
+    instancePath: string;
+    schemaPath: string;
+    keyword: string;
+    params: {
+        allowedValues: string[];
+    };
+    message: string;
+}[] | null;
+declare namespace validate20 {
+    export { validate20 as default };
+}
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js
new file mode 100644
index 0000000..f6a5a80
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js
@@ -0,0 +1,669 @@
+"use strict";
+module.exports = validate20;
+module.exports.default = validate20;
+const schema22 = { "title": "Snap Manifest", "description": "The Snap manifest file MUST be named `snap.manifest.json` and located in the package root directory.", "type": "object", "additionalProperties": false, "required": ["version", "description", "proposedName", "source", "initialPermissions", "manifestVersion"], "properties": { "version": { "type": "string", "title": "Version", "description": "MUST be a valid SemVer version string and equal to the corresponding `package.json` field.", "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" }, "description": { "type": "string", "title": "Description", "description": "MUST be a non-empty string less than or equal to 280 characters. A short description of the Snap.", "minLength": 1, "maxLength": 280 }, "proposedName": { "type": "string", "title": "Proposed Name", "description": "MUST be a string less than or equal to 214 characters. The Snap author's proposed name for the Snap. The Snap host application may display this name unmodified in its user interface. The proposed name SHOULD be human-readable.", "minLength": 1, "maxLength": 214, "pattern": "^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$" }, "repository": { "title": "Repository", "description": "MAY be omitted. If present, MUST be equal to the corresponding package.json field.", "oneOf": [{ "type": "null" }, { "type": "object", "additionalProperties": false, "required": ["type", "url"], "properties": { "type": { "type": "string", "minLength": 1 }, "url": { "type": "string", "minLength": 1 } } }] }, "source": { "type": "object", "title": "Source", "description": "Specifies some Snap metadata and where to fetch the Snap during installation.", "additionalProperties": false, "required": ["shasum", "location"], "properties": { "shasum": { "type": "string", "description": "MUST be the Base64-encoded string representation of the SHA-256 hash of the Snap source file.", "minLength": 44, "maxLength": 44, "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$" }, "location": { "title": "Source Location", "type": "object", "additionalProperties": false, "required": ["npm"], "properties": { "npm": { "title": "npm", "type": "object", "additionalProperties": false, "required": ["filePath", "packageName", "registry"], "properties": { "filePath": { "type": "string", "title": "File Path", "description": "The path to the Snap bundle file from the project root directory.", "minLength": 1 }, "iconPath": { "type": "string", "title": "Icon Path", "description": "The path to an .svg file from the project root directory.", "pattern": "\\w+\\.svg$" }, "packageName": { "type": "string", "title": "Package Name", "description": "The Snap's npm package name.", "minLength": 1 }, "registry": { "type": "string", "title": "npm Registry", "description": "The npm registry URL.", "enum": ["https://registry.npmjs.org", "https://registry.npmjs.org/"] } } } } } } }, "initialPermissions": { "type": "object", "title": "Initial Permissions", "description": "MUST be a valid EIP-2255 wallet_requestPermissions parameter object, specifying the initial permissions that will be requested when the Snap is added to the host application." }, "manifestVersion": { "type": "string", "title": "Manifest Version", "description": "The Snap manifest specification version targeted by the manifest.", "enum": ["0.1"] } } };
+const pattern0 = new RegExp("^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$", "u");
+const pattern1 = new RegExp("^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$", "u");
+const pattern2 = new RegExp("^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$", "u");
+const pattern3 = new RegExp("\\w+\\.svg$", "u");
+const func8 = require("ajv/dist/runtime/ucs2length").default;
+const func0 = require("ajv/dist/runtime/equal").default;
+function validate20(data, { instancePath = "", parentData, parentDataProperty, rootData = data } = {}) { let vErrors = null; let errors = 0; if (data && typeof data == "object" && !Array.isArray(data)) {
+    if (data.version === undefined) {
+        const err0 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "version" }, message: "must have required property '" + "version" + "'" };
+        if (vErrors === null) {
+            vErrors = [err0];
+        }
+        else {
+            vErrors.push(err0);
+        }
+        errors++;
+    }
+    if (data.description === undefined) {
+        const err1 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "description" }, message: "must have required property '" + "description" + "'" };
+        if (vErrors === null) {
+            vErrors = [err1];
+        }
+        else {
+            vErrors.push(err1);
+        }
+        errors++;
+    }
+    if (data.proposedName === undefined) {
+        const err2 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "proposedName" }, message: "must have required property '" + "proposedName" + "'" };
+        if (vErrors === null) {
+            vErrors = [err2];
+        }
+        else {
+            vErrors.push(err2);
+        }
+        errors++;
+    }
+    if (data.source === undefined) {
+        const err3 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "source" }, message: "must have required property '" + "source" + "'" };
+        if (vErrors === null) {
+            vErrors = [err3];
+        }
+        else {
+            vErrors.push(err3);
+        }
+        errors++;
+    }
+    if (data.initialPermissions === undefined) {
+        const err4 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "initialPermissions" }, message: "must have required property '" + "initialPermissions" + "'" };
+        if (vErrors === null) {
+            vErrors = [err4];
+        }
+        else {
+            vErrors.push(err4);
+        }
+        errors++;
+    }
+    if (data.manifestVersion === undefined) {
+        const err5 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "manifestVersion" }, message: "must have required property '" + "manifestVersion" + "'" };
+        if (vErrors === null) {
+            vErrors = [err5];
+        }
+        else {
+            vErrors.push(err5);
+        }
+        errors++;
+    }
+    for (const key0 in data) {
+        if (!(((((((key0 === "version") || (key0 === "description")) || (key0 === "proposedName")) || (key0 === "repository")) || (key0 === "source")) || (key0 === "initialPermissions")) || (key0 === "manifestVersion"))) {
+            const err6 = { instancePath, schemaPath: "#/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key0 }, message: "must NOT have additional properties" };
+            if (vErrors === null) {
+                vErrors = [err6];
+            }
+            else {
+                vErrors.push(err6);
+            }
+            errors++;
+        }
+    }
+    if (data.version !== undefined) {
+        let data0 = data.version;
+        if (typeof data0 === "string") {
+            if (!pattern0.test(data0)) {
+                const err7 = { instancePath: instancePath + "/version", schemaPath: "#/properties/version/pattern", keyword: "pattern", params: { pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" }, message: "must match pattern \"" + "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" + "\"" };
+                if (vErrors === null) {
+                    vErrors = [err7];
+                }
+                else {
+                    vErrors.push(err7);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err8 = { instancePath: instancePath + "/version", schemaPath: "#/properties/version/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err8];
+            }
+            else {
+                vErrors.push(err8);
+            }
+            errors++;
+        }
+    }
+    if (data.description !== undefined) {
+        let data1 = data.description;
+        if (typeof data1 === "string") {
+            if (func8(data1) > 280) {
+                const err9 = { instancePath: instancePath + "/description", schemaPath: "#/properties/description/maxLength", keyword: "maxLength", params: { limit: 280 }, message: "must NOT have more than 280 characters" };
+                if (vErrors === null) {
+                    vErrors = [err9];
+                }
+                else {
+                    vErrors.push(err9);
+                }
+                errors++;
+            }
+            if (func8(data1) < 1) {
+                const err10 = { instancePath: instancePath + "/description", schemaPath: "#/properties/description/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                if (vErrors === null) {
+                    vErrors = [err10];
+                }
+                else {
+                    vErrors.push(err10);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err11 = { instancePath: instancePath + "/description", schemaPath: "#/properties/description/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err11];
+            }
+            else {
+                vErrors.push(err11);
+            }
+            errors++;
+        }
+    }
+    if (data.proposedName !== undefined) {
+        let data2 = data.proposedName;
+        if (typeof data2 === "string") {
+            if (func8(data2) > 214) {
+                const err12 = { instancePath: instancePath + "/proposedName", schemaPath: "#/properties/proposedName/maxLength", keyword: "maxLength", params: { limit: 214 }, message: "must NOT have more than 214 characters" };
+                if (vErrors === null) {
+                    vErrors = [err12];
+                }
+                else {
+                    vErrors.push(err12);
+                }
+                errors++;
+            }
+            if (func8(data2) < 1) {
+                const err13 = { instancePath: instancePath + "/proposedName", schemaPath: "#/properties/proposedName/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                if (vErrors === null) {
+                    vErrors = [err13];
+                }
+                else {
+                    vErrors.push(err13);
+                }
+                errors++;
+            }
+            if (!pattern1.test(data2)) {
+                const err14 = { instancePath: instancePath + "/proposedName", schemaPath: "#/properties/proposedName/pattern", keyword: "pattern", params: { pattern: "^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$" }, message: "must match pattern \"" + "^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$" + "\"" };
+                if (vErrors === null) {
+                    vErrors = [err14];
+                }
+                else {
+                    vErrors.push(err14);
+                }
+                errors++;
+            }
+        }
+        else {
+            const err15 = { instancePath: instancePath + "/proposedName", schemaPath: "#/properties/proposedName/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err15];
+            }
+            else {
+                vErrors.push(err15);
+            }
+            errors++;
+        }
+    }
+    if (data.repository !== undefined) {
+        let data3 = data.repository;
+        const _errs9 = errors;
+        let valid1 = false;
+        let passing0 = null;
+        const _errs10 = errors;
+        if (data3 !== null) {
+            const err16 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf/0/type", keyword: "type", params: { type: "null" }, message: "must be null" };
+            if (vErrors === null) {
+                vErrors = [err16];
+            }
+            else {
+                vErrors.push(err16);
+            }
+            errors++;
+        }
+        var _valid0 = _errs10 === errors;
+        if (_valid0) {
+            valid1 = true;
+            passing0 = 0;
+        }
+        const _errs12 = errors;
+        if (data3 && typeof data3 == "object" && !Array.isArray(data3)) {
+            if (data3.type === undefined) {
+                const err17 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf/1/required", keyword: "required", params: { missingProperty: "type" }, message: "must have required property '" + "type" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err17];
+                }
+                else {
+                    vErrors.push(err17);
+                }
+                errors++;
+            }
+            if (data3.url === undefined) {
+                const err18 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf/1/required", keyword: "required", params: { missingProperty: "url" }, message: "must have required property '" + "url" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err18];
+                }
+                else {
+                    vErrors.push(err18);
+                }
+                errors++;
+            }
+            for (const key1 in data3) {
+                if (!((key1 === "type") || (key1 === "url"))) {
+                    const err19 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf/1/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key1 }, message: "must NOT have additional properties" };
+                    if (vErrors === null) {
+                        vErrors = [err19];
+                    }
+                    else {
+                        vErrors.push(err19);
+                    }
+                    errors++;
+                }
+            }
+            if (data3.type !== undefined) {
+                let data4 = data3.type;
+                if (typeof data4 === "string") {
+                    if (func8(data4) < 1) {
+                        const err20 = { instancePath: instancePath + "/repository/type", schemaPath: "#/properties/repository/oneOf/1/properties/type/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err20];
+                        }
+                        else {
+                            vErrors.push(err20);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err21 = { instancePath: instancePath + "/repository/type", schemaPath: "#/properties/repository/oneOf/1/properties/type/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err21];
+                    }
+                    else {
+                        vErrors.push(err21);
+                    }
+                    errors++;
+                }
+            }
+            if (data3.url !== undefined) {
+                let data5 = data3.url;
+                if (typeof data5 === "string") {
+                    if (func8(data5) < 1) {
+                        const err22 = { instancePath: instancePath + "/repository/url", schemaPath: "#/properties/repository/oneOf/1/properties/url/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err22];
+                        }
+                        else {
+                            vErrors.push(err22);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err23 = { instancePath: instancePath + "/repository/url", schemaPath: "#/properties/repository/oneOf/1/properties/url/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err23];
+                    }
+                    else {
+                        vErrors.push(err23);
+                    }
+                    errors++;
+                }
+            }
+        }
+        else {
+            const err24 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf/1/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+            if (vErrors === null) {
+                vErrors = [err24];
+            }
+            else {
+                vErrors.push(err24);
+            }
+            errors++;
+        }
+        var _valid0 = _errs12 === errors;
+        if (_valid0 && valid1) {
+            valid1 = false;
+            passing0 = [passing0, 1];
+        }
+        else {
+            if (_valid0) {
+                valid1 = true;
+                passing0 = 1;
+            }
+        }
+        if (!valid1) {
+            const err25 = { instancePath: instancePath + "/repository", schemaPath: "#/properties/repository/oneOf", keyword: "oneOf", params: { passingSchemas: passing0 }, message: "must match exactly one schema in oneOf" };
+            if (vErrors === null) {
+                vErrors = [err25];
+            }
+            else {
+                vErrors.push(err25);
+            }
+            errors++;
+        }
+        else {
+            errors = _errs9;
+            if (vErrors !== null) {
+                if (_errs9) {
+                    vErrors.length = _errs9;
+                }
+                else {
+                    vErrors = null;
+                }
+            }
+        }
+    }
+    if (data.source !== undefined) {
+        let data6 = data.source;
+        if (data6 && typeof data6 == "object" && !Array.isArray(data6)) {
+            if (data6.shasum === undefined) {
+                const err26 = { instancePath: instancePath + "/source", schemaPath: "#/properties/source/required", keyword: "required", params: { missingProperty: "shasum" }, message: "must have required property '" + "shasum" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err26];
+                }
+                else {
+                    vErrors.push(err26);
+                }
+                errors++;
+            }
+            if (data6.location === undefined) {
+                const err27 = { instancePath: instancePath + "/source", schemaPath: "#/properties/source/required", keyword: "required", params: { missingProperty: "location" }, message: "must have required property '" + "location" + "'" };
+                if (vErrors === null) {
+                    vErrors = [err27];
+                }
+                else {
+                    vErrors.push(err27);
+                }
+                errors++;
+            }
+            for (const key2 in data6) {
+                if (!((key2 === "shasum") || (key2 === "location"))) {
+                    const err28 = { instancePath: instancePath + "/source", schemaPath: "#/properties/source/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key2 }, message: "must NOT have additional properties" };
+                    if (vErrors === null) {
+                        vErrors = [err28];
+                    }
+                    else {
+                        vErrors.push(err28);
+                    }
+                    errors++;
+                }
+            }
+            if (data6.shasum !== undefined) {
+                let data7 = data6.shasum;
+                if (typeof data7 === "string") {
+                    if (func8(data7) > 44) {
+                        const err29 = { instancePath: instancePath + "/source/shasum", schemaPath: "#/properties/source/properties/shasum/maxLength", keyword: "maxLength", params: { limit: 44 }, message: "must NOT have more than 44 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err29];
+                        }
+                        else {
+                            vErrors.push(err29);
+                        }
+                        errors++;
+                    }
+                    if (func8(data7) < 44) {
+                        const err30 = { instancePath: instancePath + "/source/shasum", schemaPath: "#/properties/source/properties/shasum/minLength", keyword: "minLength", params: { limit: 44 }, message: "must NOT have fewer than 44 characters" };
+                        if (vErrors === null) {
+                            vErrors = [err30];
+                        }
+                        else {
+                            vErrors.push(err30);
+                        }
+                        errors++;
+                    }
+                    if (!pattern2.test(data7)) {
+                        const err31 = { instancePath: instancePath + "/source/shasum", schemaPath: "#/properties/source/properties/shasum/pattern", keyword: "pattern", params: { pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$" }, message: "must match pattern \"" + "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$" + "\"" };
+                        if (vErrors === null) {
+                            vErrors = [err31];
+                        }
+                        else {
+                            vErrors.push(err31);
+                        }
+                        errors++;
+                    }
+                }
+                else {
+                    const err32 = { instancePath: instancePath + "/source/shasum", schemaPath: "#/properties/source/properties/shasum/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                    if (vErrors === null) {
+                        vErrors = [err32];
+                    }
+                    else {
+                        vErrors.push(err32);
+                    }
+                    errors++;
+                }
+            }
+            if (data6.location !== undefined) {
+                let data8 = data6.location;
+                if (data8 && typeof data8 == "object" && !Array.isArray(data8)) {
+                    if (data8.npm === undefined) {
+                        const err33 = { instancePath: instancePath + "/source/location", schemaPath: "#/properties/source/properties/location/required", keyword: "required", params: { missingProperty: "npm" }, message: "must have required property '" + "npm" + "'" };
+                        if (vErrors === null) {
+                            vErrors = [err33];
+                        }
+                        else {
+                            vErrors.push(err33);
+                        }
+                        errors++;
+                    }
+                    for (const key3 in data8) {
+                        if (!(key3 === "npm")) {
+                            const err34 = { instancePath: instancePath + "/source/location", schemaPath: "#/properties/source/properties/location/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key3 }, message: "must NOT have additional properties" };
+                            if (vErrors === null) {
+                                vErrors = [err34];
+                            }
+                            else {
+                                vErrors.push(err34);
+                            }
+                            errors++;
+                        }
+                    }
+                    if (data8.npm !== undefined) {
+                        let data9 = data8.npm;
+                        if (data9 && typeof data9 == "object" && !Array.isArray(data9)) {
+                            if (data9.filePath === undefined) {
+                                const err35 = { instancePath: instancePath + "/source/location/npm", schemaPath: "#/properties/source/properties/location/properties/npm/required", keyword: "required", params: { missingProperty: "filePath" }, message: "must have required property '" + "filePath" + "'" };
+                                if (vErrors === null) {
+                                    vErrors = [err35];
+                                }
+                                else {
+                                    vErrors.push(err35);
+                                }
+                                errors++;
+                            }
+                            if (data9.packageName === undefined) {
+                                const err36 = { instancePath: instancePath + "/source/location/npm", schemaPath: "#/properties/source/properties/location/properties/npm/required", keyword: "required", params: { missingProperty: "packageName" }, message: "must have required property '" + "packageName" + "'" };
+                                if (vErrors === null) {
+                                    vErrors = [err36];
+                                }
+                                else {
+                                    vErrors.push(err36);
+                                }
+                                errors++;
+                            }
+                            if (data9.registry === undefined) {
+                                const err37 = { instancePath: instancePath + "/source/location/npm", schemaPath: "#/properties/source/properties/location/properties/npm/required", keyword: "required", params: { missingProperty: "registry" }, message: "must have required property '" + "registry" + "'" };
+                                if (vErrors === null) {
+                                    vErrors = [err37];
+                                }
+                                else {
+                                    vErrors.push(err37);
+                                }
+                                errors++;
+                            }
+                            for (const key4 in data9) {
+                                if (!((((key4 === "filePath") || (key4 === "iconPath")) || (key4 === "packageName")) || (key4 === "registry"))) {
+                                    const err38 = { instancePath: instancePath + "/source/location/npm", schemaPath: "#/properties/source/properties/location/properties/npm/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key4 }, message: "must NOT have additional properties" };
+                                    if (vErrors === null) {
+                                        vErrors = [err38];
+                                    }
+                                    else {
+                                        vErrors.push(err38);
+                                    }
+                                    errors++;
+                                }
+                            }
+                            if (data9.filePath !== undefined) {
+                                let data10 = data9.filePath;
+                                if (typeof data10 === "string") {
+                                    if (func8(data10) < 1) {
+                                        const err39 = { instancePath: instancePath + "/source/location/npm/filePath", schemaPath: "#/properties/source/properties/location/properties/npm/properties/filePath/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                                        if (vErrors === null) {
+                                            vErrors = [err39];
+                                        }
+                                        else {
+                                            vErrors.push(err39);
+                                        }
+                                        errors++;
+                                    }
+                                }
+                                else {
+                                    const err40 = { instancePath: instancePath + "/source/location/npm/filePath", schemaPath: "#/properties/source/properties/location/properties/npm/properties/filePath/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                                    if (vErrors === null) {
+                                        vErrors = [err40];
+                                    }
+                                    else {
+                                        vErrors.push(err40);
+                                    }
+                                    errors++;
+                                }
+                            }
+                            if (data9.iconPath !== undefined) {
+                                let data11 = data9.iconPath;
+                                if (typeof data11 === "string") {
+                                    if (!pattern3.test(data11)) {
+                                        const err41 = { instancePath: instancePath + "/source/location/npm/iconPath", schemaPath: "#/properties/source/properties/location/properties/npm/properties/iconPath/pattern", keyword: "pattern", params: { pattern: "\\w+\\.svg$" }, message: "must match pattern \"" + "\\w+\\.svg$" + "\"" };
+                                        if (vErrors === null) {
+                                            vErrors = [err41];
+                                        }
+                                        else {
+                                            vErrors.push(err41);
+                                        }
+                                        errors++;
+                                    }
+                                }
+                                else {
+                                    const err42 = { instancePath: instancePath + "/source/location/npm/iconPath", schemaPath: "#/properties/source/properties/location/properties/npm/properties/iconPath/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                                    if (vErrors === null) {
+                                        vErrors = [err42];
+                                    }
+                                    else {
+                                        vErrors.push(err42);
+                                    }
+                                    errors++;
+                                }
+                            }
+                            if (data9.packageName !== undefined) {
+                                let data12 = data9.packageName;
+                                if (typeof data12 === "string") {
+                                    if (func8(data12) < 1) {
+                                        const err43 = { instancePath: instancePath + "/source/location/npm/packageName", schemaPath: "#/properties/source/properties/location/properties/npm/properties/packageName/minLength", keyword: "minLength", params: { limit: 1 }, message: "must NOT have fewer than 1 characters" };
+                                        if (vErrors === null) {
+                                            vErrors = [err43];
+                                        }
+                                        else {
+                                            vErrors.push(err43);
+                                        }
+                                        errors++;
+                                    }
+                                }
+                                else {
+                                    const err44 = { instancePath: instancePath + "/source/location/npm/packageName", schemaPath: "#/properties/source/properties/location/properties/npm/properties/packageName/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                                    if (vErrors === null) {
+                                        vErrors = [err44];
+                                    }
+                                    else {
+                                        vErrors.push(err44);
+                                    }
+                                    errors++;
+                                }
+                            }
+                            if (data9.registry !== undefined) {
+                                let data13 = data9.registry;
+                                if (typeof data13 !== "string") {
+                                    const err45 = { instancePath: instancePath + "/source/location/npm/registry", schemaPath: "#/properties/source/properties/location/properties/npm/properties/registry/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+                                    if (vErrors === null) {
+                                        vErrors = [err45];
+                                    }
+                                    else {
+                                        vErrors.push(err45);
+                                    }
+                                    errors++;
+                                }
+                                if (!((data13 === "https://registry.npmjs.org") || (data13 === "https://registry.npmjs.org/"))) {
+                                    const err46 = { instancePath: instancePath + "/source/location/npm/registry", schemaPath: "#/properties/source/properties/location/properties/npm/properties/registry/enum", keyword: "enum", params: { allowedValues: schema22.properties.source.properties.location.properties.npm.properties.registry.enum }, message: "must be equal to one of the allowed values" };
+                                    if (vErrors === null) {
+                                        vErrors = [err46];
+                                    }
+                                    else {
+                                        vErrors.push(err46);
+                                    }
+                                    errors++;
+                                }
+                            }
+                        }
+                        else {
+                            const err47 = { instancePath: instancePath + "/source/location/npm", schemaPath: "#/properties/source/properties/location/properties/npm/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+                            if (vErrors === null) {
+                                vErrors = [err47];
+                            }
+                            else {
+                                vErrors.push(err47);
+                            }
+                            errors++;
+                        }
+                    }
+                }
+                else {
+                    const err48 = { instancePath: instancePath + "/source/location", schemaPath: "#/properties/source/properties/location/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+                    if (vErrors === null) {
+                        vErrors = [err48];
+                    }
+                    else {
+                        vErrors.push(err48);
+                    }
+                    errors++;
+                }
+            }
+        }
+        else {
+            const err49 = { instancePath: instancePath + "/source", schemaPath: "#/properties/source/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+            if (vErrors === null) {
+                vErrors = [err49];
+            }
+            else {
+                vErrors.push(err49);
+            }
+            errors++;
+        }
+    }
+    if (data.initialPermissions !== undefined) {
+        let data14 = data.initialPermissions;
+        if (!(data14 && typeof data14 == "object" && !Array.isArray(data14))) {
+            const err50 = { instancePath: instancePath + "/initialPermissions", schemaPath: "#/properties/initialPermissions/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+            if (vErrors === null) {
+                vErrors = [err50];
+            }
+            else {
+                vErrors.push(err50);
+            }
+            errors++;
+        }
+    }
+    if (data.manifestVersion !== undefined) {
+        let data15 = data.manifestVersion;
+        if (typeof data15 !== "string") {
+            const err51 = { instancePath: instancePath + "/manifestVersion", schemaPath: "#/properties/manifestVersion/type", keyword: "type", params: { type: "string" }, message: "must be string" };
+            if (vErrors === null) {
+                vErrors = [err51];
+            }
+            else {
+                vErrors.push(err51);
+            }
+            errors++;
+        }
+        if (!(data15 === "0.1")) {
+            const err52 = { instancePath: instancePath + "/manifestVersion", schemaPath: "#/properties/manifestVersion/enum", keyword: "enum", params: { allowedValues: schema22.properties.manifestVersion.enum }, message: "must be equal to one of the allowed values" };
+            if (vErrors === null) {
+                vErrors = [err52];
+            }
+            else {
+                vErrors.push(err52);
+            }
+            errors++;
+        }
+    }
+}
+else {
+    const err53 = { instancePath, schemaPath: "#/type", keyword: "type", params: { type: "object" }, message: "must be object" };
+    if (vErrors === null) {
+        vErrors = [err53];
+    }
+    else {
+        vErrors.push(err53);
+    }
+    errors++;
+} validate20.errors = vErrors; return vErrors; }
+//# sourceMappingURL=validateSnapManifest.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js.map
new file mode 100644
index 0000000..e8bd868
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/json-schemas/validateSnapManifest.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"validateSnapManifest.js","sourceRoot":"","sources":["../../../src/snaps/json-schemas/validateSnapManifest.js"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.d.ts
new file mode 100644
index 0000000..90bc362
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.d.ts
@@ -0,0 +1,109 @@
+import { Json } from '@metamask/controllers';
+import { NpmSnapPackageJson, SnapManifest } from './json-schemas';
+export declare enum SnapIdPrefixes {
+    npm = "npm:",
+    local = "local:"
+}
+export declare enum NpmSnapFileNames {
+    PackageJson = "package.json",
+    Manifest = "snap.manifest.json"
+}
+export declare const LOCALHOST_HOSTNAMES: Set<string>;
+export declare const DEFAULT_NPM_REGISTRY = "https://registry.npmjs.org";
+export declare const DEFAULT_REQUESTED_SNAP_VERSION = "*";
+export declare const PROPOSED_NAME_REGEX: RegExp;
+export declare const fetchContent: typeof globalThis.fetch;
+/**
+ * Calculates the Base64-econded SHA-256 digest of a Snap source code string.
+ *
+ * @param sourceCode - The UTF-8 string source code of a Snap.
+ * @returns The Base64-encoded SHA-256 digest of the source code.
+ */
+export declare function getSnapSourceShasum(sourceCode: string): string;
+export declare type ValidatedSnapId = `local:${string}` | `npm:${string}`;
+/**
+ * An object for storing parsed but unvalidated Snap file contents.
+ */
+export declare type UnvalidatedSnapFiles = {
+    manifest?: Json;
+    packageJson?: Json;
+    sourceCode?: string;
+    svgIcon?: string;
+};
+/**
+ * An object for storing the contents of Snap files that have passed JSON
+ * Schema validation, or are non-empty if they are strings.
+ */
+export declare type SnapFiles = {
+    manifest: SnapManifest;
+    packageJson: NpmSnapPackageJson;
+    sourceCode: string;
+    svgIcon?: string;
+};
+/**
+ * Fetches a Snap from the public npm registry.
+ *
+ * @param packageName - The name of the package whose tarball to fetch.
+ * @param version - The version of the package to fetch, or the string `latest`
+ * to fetch the latest version.
+ * @param fetchFunction - The fetch function to use. Defaults to the global
+ * {@link fetchContent}. Useful for Node.js compatibility.
+ * @returns A tuple of the Snap manifest object and the Snap source code.
+ */
+export declare function fetchNpmSnap(packageName: string, version: string, registryUrl?: string, fetchFunction?: typeof globalThis.fetch): Promise<SnapFiles>;
+/**
+ * Snap validation failure reason codes that are programmatically fixable
+ * if validation occurs during development.
+ */
+export declare enum SnapValidationFailureReason {
+    NameMismatch = "\"name\" field mismatch",
+    VersionMismatch = "\"version\" field mismatch",
+    RepositoryMismatch = "\"repository\" field mismatch",
+    ShasumMismatch = "\"shasum\" field mismatch"
+}
+/**
+ * An error indicating that a Snap validation failure is programmatically
+ * fixable during development.
+ */
+export declare class ProgrammaticallyFixableSnapError extends Error {
+    reason: SnapValidationFailureReason;
+    constructor(message: string, reason: SnapValidationFailureReason);
+}
+/**
+ * Validates the files extracted from an npm Snap package tarball by ensuring
+ * that they're non-empty and that the Json files match their respective schemas
+ * and the Snaps publishing specification.
+ *
+ * @param snapFiles - The object containing the expected Snap file contents,
+ * if any.
+ * @param packageName - The name of the package whose tarball to fetch.
+ * @param version - The version of the package to fetch, or the string `latest`.
+ * @param errorPrefix - The prefix of the error message.
+ * @returns A tuple of the Snap manifest object and the Snap source code.
+ */
+export declare function validateNpmSnap(snapFiles: UnvalidatedSnapFiles, errorPrefix: `${string}: `): SnapFiles;
+/**
+ * Validates the fields of an npm Snap manifest that has already passed JSON
+ * Schema validation.
+ *
+ * @param manifest - The npm Snap manifest to validate.
+ * @param packageJson - The npm Snap's `package.json`.
+ * @param sourceCode - The Snap's source code.
+ * @param errorPrefix - The prefix for error messages.
+ */
+export declare function validateNpmSnapManifest({ manifest, packageJson, sourceCode }: SnapFiles, errorPrefix: `${string}: `): [SnapManifest, string, NpmSnapPackageJson];
+/**
+ * Checks whether the source.shasum property of the specified Snap manifest
+ * matches the shasum of the specified snap source code string.
+ *
+ * @param manifest - The manifest whose shasum to validate.
+ * @param sourceCode - The source code of the snap.
+ */
+export declare function validateSnapShasum(manifest: SnapManifest, sourceCode: string, errorMessage?: string): void;
+/**
+ * Parse a version received by some subject attempting to access a snap.
+ * @param version - The received version value.
+ * @returns `*` if the version is `undefined` or `latest", otherwise returns
+ * the specified version.
+ */
+export declare function resolveVersion(version?: Json): Json;
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js
new file mode 100644
index 0000000..95989a0
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js
@@ -0,0 +1,371 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.resolveVersion = exports.validateSnapShasum = exports.validateNpmSnapManifest = exports.validateNpmSnap = exports.ProgrammaticallyFixableSnapError = exports.SnapValidationFailureReason = exports.fetchNpmSnap = exports.getSnapSourceShasum = exports.fetchContent = exports.PROPOSED_NAME_REGEX = exports.DEFAULT_REQUESTED_SNAP_VERSION = exports.DEFAULT_NPM_REGISTRY = exports.LOCALHOST_HOSTNAMES = exports.NpmSnapFileNames = exports.SnapIdPrefixes = void 0;
+const crypto_1 = require("crypto");
+const concat_stream_1 = __importDefault(require("concat-stream"));
+const cross_fetch_1 = __importDefault(require("cross-fetch"));
+const fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
+const gunzip_maybe_1 = __importDefault(require("gunzip-maybe"));
+const pump_1 = __importDefault(require("pump"));
+const readable_web_to_node_stream_1 = require("readable-web-to-node-stream");
+const semver_1 = require("semver");
+const tar_stream_1 = require("tar-stream");
+const utils_1 = require("../utils");
+const json_schemas_1 = require("./json-schemas");
+var SnapIdPrefixes;
+(function (SnapIdPrefixes) {
+    SnapIdPrefixes["npm"] = "npm:";
+    SnapIdPrefixes["local"] = "local:";
+})(SnapIdPrefixes = exports.SnapIdPrefixes || (exports.SnapIdPrefixes = {}));
+var NpmSnapFileNames;
+(function (NpmSnapFileNames) {
+    NpmSnapFileNames["PackageJson"] = "package.json";
+    NpmSnapFileNames["Manifest"] = "snap.manifest.json";
+})(NpmSnapFileNames = exports.NpmSnapFileNames || (exports.NpmSnapFileNames = {}));
+exports.LOCALHOST_HOSTNAMES = new Set(['localhost', '127.0.0.1', '::1']);
+exports.DEFAULT_NPM_REGISTRY = 'https://registry.npmjs.org';
+exports.DEFAULT_REQUESTED_SNAP_VERSION = '*';
+const SVG_MAX_BYTE_SIZE = 100000;
+const SVG_MAX_BYTE_SIZE_TEXT = `${Math.floor(SVG_MAX_BYTE_SIZE / 1000)}kb`;
+// This RegEx matches valid npm package names (with some exceptions) and space-
+// separated alphanumerical words, optionally with dashes and underscores.
+// The RegEx consists of two parts. The first part matches space-separated
+// words. It is based on the following Stackoverflow answer:
+// https://stackoverflow.com/a/34974982
+// The second part, after the pipe operator, is the same RegEx used for the
+// `name` field of the official package.json JSON Schema, except that we allow
+// mixed-case letters. It was originally copied from:
+// https://github.com/SchemaStore/schemastore/blob/81a16897c1dabfd98c72242a5fd62eb080ff76d8/src/schemas/json/package.json#L132-L138
+exports.PROPOSED_NAME_REGEX = /^(?:[A-Za-z0-9-_]+( [A-Za-z0-9-_]+)*)|(?:(?:@[A-Za-z0-9-*~][A-Za-z0-9-*._~]*\/)?[A-Za-z0-9-~][A-Za-z0-9-._~]*)$/u;
+exports.fetchContent = cross_fetch_1.default;
+/**
+ * Calculates the Base64-econded SHA-256 digest of a Snap source code string.
+ *
+ * @param sourceCode - The UTF-8 string source code of a Snap.
+ * @returns The Base64-encoded SHA-256 digest of the source code.
+ */
+function getSnapSourceShasum(sourceCode) {
+    return crypto_1.createHash('sha256').update(sourceCode, 'utf8').digest('base64');
+}
+exports.getSnapSourceShasum = getSnapSourceShasum;
+// npm fetch stuff
+const ExpectedSnapFiles = ['manifest', 'packageJson', 'sourceCode'];
+const SnapFileNameFromKey = {
+    manifest: NpmSnapFileNames.Manifest,
+    packageJson: NpmSnapFileNames.PackageJson,
+    sourceCode: 'source code bundle',
+};
+/**
+ * Fetches a Snap from the public npm registry.
+ *
+ * @param packageName - The name of the package whose tarball to fetch.
+ * @param version - The version of the package to fetch, or the string `latest`
+ * to fetch the latest version.
+ * @param fetchFunction - The fetch function to use. Defaults to the global
+ * {@link fetchContent}. Useful for Node.js compatibility.
+ * @returns A tuple of the Snap manifest object and the Snap source code.
+ */
+async function fetchNpmSnap(packageName, version, registryUrl = exports.DEFAULT_NPM_REGISTRY, fetchFunction = exports.fetchContent) {
+    const [tarballResponse, actualVersion] = await fetchNpmTarball(packageName, version, registryUrl, fetchFunction);
+    // Extract the tarball and get the necessary files from it.
+    const snapFiles = {};
+    await new Promise((resolve, reject) => {
+        pump_1.default(getNodeStream(tarballResponse), 
+        // The "gz" in "tgz" stands for "gzip". The tarball needs to be decompressed
+        // before we can actually grab any files from it.
+        gunzip_maybe_1.default(), createTarballExtractionStream(snapFiles), (error) => {
+            error ? reject(error) : resolve();
+        });
+    });
+    // At this point, the necessary files will have been added to the snapFiles
+    // object if they exist.
+    return validateNpmSnap(snapFiles, `npm Snap "${packageName}@${actualVersion}" validation error: `);
+}
+exports.fetchNpmSnap = fetchNpmSnap;
+/**
+ * Snap validation failure reason codes that are programmatically fixable
+ * if validation occurs during development.
+ */
+var SnapValidationFailureReason;
+(function (SnapValidationFailureReason) {
+    SnapValidationFailureReason["NameMismatch"] = "\"name\" field mismatch";
+    SnapValidationFailureReason["VersionMismatch"] = "\"version\" field mismatch";
+    SnapValidationFailureReason["RepositoryMismatch"] = "\"repository\" field mismatch";
+    SnapValidationFailureReason["ShasumMismatch"] = "\"shasum\" field mismatch";
+})(SnapValidationFailureReason = exports.SnapValidationFailureReason || (exports.SnapValidationFailureReason = {}));
+/**
+ * An error indicating that a Snap validation failure is programmatically
+ * fixable during development.
+ */
+class ProgrammaticallyFixableSnapError extends Error {
+    constructor(message, reason) {
+        super(message);
+        this.reason = reason;
+    }
+}
+exports.ProgrammaticallyFixableSnapError = ProgrammaticallyFixableSnapError;
+/**
+ * Validates the files extracted from an npm Snap package tarball by ensuring
+ * that they're non-empty and that the Json files match their respective schemas
+ * and the Snaps publishing specification.
+ *
+ * @param snapFiles - The object containing the expected Snap file contents,
+ * if any.
+ * @param packageName - The name of the package whose tarball to fetch.
+ * @param version - The version of the package to fetch, or the string `latest`.
+ * @param errorPrefix - The prefix of the error message.
+ * @returns A tuple of the Snap manifest object and the Snap source code.
+ */
+function validateNpmSnap(snapFiles, errorPrefix) {
+    ExpectedSnapFiles.forEach((key) => {
+        if (!snapFiles[key]) {
+            throw new Error(`${errorPrefix}Missing file "${SnapFileNameFromKey[key]}".`);
+        }
+    });
+    // Typecast: We are assured that the required files exist if we get here.
+    const { manifest, packageJson, sourceCode, svgIcon } = snapFiles;
+    try {
+        json_schemas_1.validateSnapJsonFile(NpmSnapFileNames.Manifest, manifest);
+    }
+    catch (error) {
+        throw new Error(`${errorPrefix}"${NpmSnapFileNames.Manifest}" is invalid:\n${error.message}`);
+    }
+    const validatedManifest = manifest;
+    const { iconPath } = validatedManifest.source.location.npm;
+    if (iconPath && !svgIcon) {
+        throw new Error(`${errorPrefix}Missing file "${iconPath}".`);
+    }
+    try {
+        json_schemas_1.validateSnapJsonFile(NpmSnapFileNames.PackageJson, packageJson);
+    }
+    catch (error) {
+        throw new Error(`${errorPrefix}"${NpmSnapFileNames.PackageJson}" is invalid:\n${error.message}`);
+    }
+    const validatedPackageJson = packageJson;
+    validateNpmSnapManifest({
+        manifest: validatedManifest,
+        packageJson: validatedPackageJson,
+        sourceCode,
+    }, errorPrefix);
+    if (svgIcon) {
+        if (Buffer.byteLength(svgIcon, 'utf8') > SVG_MAX_BYTE_SIZE) {
+            throw new Error(`${errorPrefix}The specified SVG icon exceeds the maximum size of ${SVG_MAX_BYTE_SIZE_TEXT}.`);
+        }
+    }
+    return {
+        manifest: validatedManifest,
+        packageJson: validatedPackageJson,
+        sourceCode,
+        svgIcon,
+    };
+}
+exports.validateNpmSnap = validateNpmSnap;
+/**
+ * Validates the fields of an npm Snap manifest that has already passed JSON
+ * Schema validation.
+ *
+ * @param manifest - The npm Snap manifest to validate.
+ * @param packageJson - The npm Snap's `package.json`.
+ * @param sourceCode - The Snap's source code.
+ * @param errorPrefix - The prefix for error messages.
+ */
+function validateNpmSnapManifest({ manifest, packageJson, sourceCode }, errorPrefix) {
+    const packageJsonName = packageJson.name;
+    const packageJsonVersion = packageJson.version;
+    const packageJsonRepository = packageJson.repository;
+    const manifestPackageName = manifest.source.location.npm.packageName;
+    const manifestPackageVersion = manifest.version;
+    const manifestRepository = manifest.repository;
+    if (packageJsonName !== manifestPackageName) {
+        throw new ProgrammaticallyFixableSnapError(`${errorPrefix}"${NpmSnapFileNames.Manifest}" npm package name ("${manifestPackageName}") does not match the "${NpmSnapFileNames.PackageJson}" "name" field ("${packageJsonName}").`, SnapValidationFailureReason.NameMismatch);
+    }
+    if (packageJsonVersion !== manifestPackageVersion) {
+        throw new ProgrammaticallyFixableSnapError(`${errorPrefix}"${NpmSnapFileNames.Manifest}" npm package version ("${manifestPackageVersion}") does not match the "${NpmSnapFileNames.PackageJson}" "version" field ("${packageJsonVersion}").`, SnapValidationFailureReason.VersionMismatch);
+    }
+    if (
+    // The repository may be `undefined` in package.json but can only be defined
+    // or `null` in the Snap manifest due to TS@<4.4 issues.
+    (packageJsonRepository || manifestRepository) &&
+        !fast_deep_equal_1.default(packageJsonRepository, manifestRepository)) {
+        throw new ProgrammaticallyFixableSnapError(`${errorPrefix}"${NpmSnapFileNames.Manifest}" "repository" field does not match the "${NpmSnapFileNames.PackageJson}" "repository" field.`, SnapValidationFailureReason.RepositoryMismatch);
+    }
+    validateSnapShasum(manifest, sourceCode, `${errorPrefix}"${NpmSnapFileNames.Manifest}" "shasum" field does not match computed shasum.`);
+    return [manifest, sourceCode, packageJson];
+}
+exports.validateNpmSnapManifest = validateNpmSnapManifest;
+/**
+ * Fetches the tarball (`.tgz` file) of the specified package and version from
+ * the public npm registry. Throws an error if fetching fails.
+ *
+ * @param packageName - The name of the package whose tarball to fetch.
+ * @param version - The semver range of the package to fetch, max satisfying will be fetched
+ * @param fetchFunction - The fetch function to use. Defaults to the global
+ * {@link fetchContent}. Useful for Node.js compatibility.
+ * @returns A tuple of the {@link Response} for the package tarball and the
+ * actual version of the package.
+ */
+async function fetchNpmTarball(packageName, version, registryUrl = exports.DEFAULT_NPM_REGISTRY, fetchFunction = exports.fetchContent) {
+    var _a, _b, _c, _d, _e;
+    const packageMetadata = await (await fetchFunction(new URL(packageName, registryUrl).toString())).json();
+    if (!utils_1.isPlainObject(packageMetadata)) {
+        throw new Error(`Failed to fetch package "${packageName}" metadata from npm.`);
+    }
+    const targetVersion = semver_1.maxSatisfying(Object.keys((_b = (_a = packageMetadata) === null || _a === void 0 ? void 0 : _a.versions) !== null && _b !== void 0 ? _b : {}), version);
+    if (targetVersion === null) {
+        throw new Error(`Failed to find a matching version in npm metadata for package "${packageName}" and requested semver range "${version}"`);
+    }
+    const tarballUrlString = (_e = (_d = (_c = packageMetadata.versions) === null || _c === void 0 ? void 0 : _c[targetVersion]) === null || _d === void 0 ? void 0 : _d.dist) === null || _e === void 0 ? void 0 : _e.tarball;
+    if (!isValidUrl(tarballUrlString) || !tarballUrlString.endsWith('.tgz')) {
+        throw new Error(`Failed to find valid tarball URL in npm metadata for package "${packageName}".`);
+    }
+    // Override the tarball hostname/protocol with registryUrl hostname/protocol
+    const newRegistryUrl = new URL(registryUrl);
+    const newTarballUrl = new URL(tarballUrlString);
+    newTarballUrl.hostname = newRegistryUrl.hostname;
+    newTarballUrl.protocol = newRegistryUrl.protocol;
+    // Perform a raw fetch because we want the Response object itself.
+    const tarballResponse = await fetchFunction(newTarballUrl.toString());
+    if (!tarballResponse.ok) {
+        throw new Error(`Failed to fetch tarball for package "${packageName}".`);
+    }
+    const stream = await tarballResponse.blob().then((blob) => blob.stream());
+    return [stream, targetVersion];
+}
+// The paths of files within npm tarballs appear to always be prefixed with
+// "package/".
+const NPM_TARBALL_PATH_PREFIX = /^package\//u;
+/**
+ * Creates a `tar-stream` that will get the necessary files from an npm Snap
+ * package tarball (`.tgz` file).
+ *
+ * @param snapFiles - An object to write target file contents to.
+ * @returns The {@link Writable} tarball extraction stream.
+ */
+function createTarballExtractionStream(snapFiles) {
+    // `tar-stream` is pretty old-school, so we create it first and then
+    // instrument it by adding event listeners.
+    const extractStream = tar_stream_1.extract();
+    // `tar-stream` reads every file in the tarball serially. We already know
+    // where to look for package.json and the Snap manifest, but we don't know
+    // where the source code is. Therefore, we cache the contents of each .js
+    // file in the tarball and pick out the correct one when the stream has ended.
+    const jsFileCache = new Map();
+    // "entry" is fired for every discreet entity in the tarball. This includes
+    // files and folders.
+    extractStream.on('entry', (header, entryStream, next) => {
+        const { name: headerName, type: headerType } = header;
+        if (headerType === 'file') {
+            // The name is a path if the header type is "file".
+            const filePath = headerName.replace(NPM_TARBALL_PATH_PREFIX, '');
+            // Note the use of `concat-stream` since the data for each file may be
+            // chunked.
+            if (filePath === NpmSnapFileNames.PackageJson) {
+                return entryStream.pipe(concat_stream_1.default((data) => {
+                    try {
+                        snapFiles.packageJson = JSON.parse(data.toString());
+                    }
+                    catch (_error) {
+                        return extractStream.destroy(new Error(`Failed to parse "${NpmSnapFileNames.PackageJson}".`));
+                    }
+                    return next();
+                }));
+            }
+            else if (filePath === NpmSnapFileNames.Manifest) {
+                return entryStream.pipe(concat_stream_1.default((data) => {
+                    try {
+                        snapFiles.manifest = JSON.parse(data.toString());
+                    }
+                    catch (_error) {
+                        return extractStream.destroy(new Error(`Failed to parse "${NpmSnapFileNames.Manifest}".`));
+                    }
+                    return next();
+                }));
+            }
+            else if (/\w+\.(?:js|svg)$/u.test(filePath)) {
+                return entryStream.pipe(concat_stream_1.default((data) => {
+                    jsFileCache.set(filePath, data);
+                    return next();
+                }));
+            }
+        }
+        // If we get here, the entry is not a file, and we want to ignore. The entry
+        // stream must be drained, or the extractStream will stop reading. This is
+        // effectively a no-op for the current entry.
+        entryStream.on('end', () => next());
+        return entryStream.resume();
+    });
+    // When we've read the entire tarball, attempt to grab the bundle file
+    // contents from the .js file cache.
+    extractStream.on('finish', () => {
+        var _a, _b, _c, _d, _e;
+        if (utils_1.isPlainObject(snapFiles.manifest)) {
+            /* istanbul ignore next: optional chaining */
+            const { filePath: bundlePath, iconPath } = (_c = (_b = (_a = snapFiles.manifest.source) === null || _a === void 0 ? void 0 : _a.location) === null || _b === void 0 ? void 0 : _b.npm) !== null && _c !== void 0 ? _c : {};
+            if (bundlePath) {
+                snapFiles.sourceCode = (_d = jsFileCache.get(bundlePath)) === null || _d === void 0 ? void 0 : _d.toString('utf8');
+            }
+            if (typeof iconPath === 'string' && iconPath.endsWith('.svg')) {
+                snapFiles.svgIcon = (_e = jsFileCache.get(iconPath)) === null || _e === void 0 ? void 0 : _e.toString('utf8');
+            }
+        }
+        jsFileCache.clear();
+    });
+    return extractStream;
+}
+/**
+ * Checks whether the source.shasum property of the specified Snap manifest
+ * matches the shasum of the specified snap source code string.
+ *
+ * @param manifest - The manifest whose shasum to validate.
+ * @param sourceCode - The source code of the snap.
+ */
+function validateSnapShasum(manifest, sourceCode, errorMessage = 'Invalid Snap manifest: manifest shasum does not match computed shasum.') {
+    if (manifest.source.shasum !== getSnapSourceShasum(sourceCode)) {
+        throw new ProgrammaticallyFixableSnapError(errorMessage, SnapValidationFailureReason.ShasumMismatch);
+    }
+}
+exports.validateSnapShasum = validateSnapShasum;
+/**
+ * Converts a {@link ReadableStream} to a Node.js {@link Readable}
+ * stream. Returns the stream directly if it is already a Node.js stream.
+ * We can't use the native Web {@link ReadableStream} directly because the
+ * other stream libraries we use expect Node.js streams.
+ *
+ * @param response - The response whose body stream to get.
+ * @returns The response body stream, as a Node.js Readable stream.
+ */
+function getNodeStream(stream) {
+    if (typeof stream.getReader !== 'function') {
+        return stream;
+    }
+    return new readable_web_to_node_stream_1.ReadableWebToNodeStream(stream);
+}
+/**
+ * @param maybeUrl - The string to check.
+ * @returns Whether the specified string is a valid URL.
+ */
+function isValidUrl(maybeUrl) {
+    try {
+        return Boolean(new URL(maybeUrl));
+    }
+    catch (_error) {
+        return false;
+    }
+}
+/**
+ * Parse a version received by some subject attempting to access a snap.
+ * @param version - The received version value.
+ * @returns `*` if the version is `undefined` or `latest", otherwise returns
+ * the specified version.
+ */
+function resolveVersion(version) {
+    if (version === undefined || version === 'latest') {
+        return exports.DEFAULT_REQUESTED_SNAP_VERSION;
+    }
+    return version;
+}
+exports.resolveVersion = resolveVersion;
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js.map b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js.map
new file mode 100644
index 0000000..2d0cab2
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/snaps/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/snaps/utils.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/utils.d.ts b/node_modules/@metamask/snap-controllers/dist/dist/utils.d.ts
new file mode 100644
index 0000000..63caa15
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/utils.d.ts
@@ -0,0 +1,42 @@
+import { Json } from '@metamask/controllers';
+/**
+ * @param timestamp - A Unix millisecond timestamp.
+ * @returns The number of milliseconds elapsed since the specified timestamp.
+ */
+export declare function timeSince(timestamp: number): number;
+declare type PlainObject = Record<number | string | symbol, unknown>;
+export declare function isPlainObject(value: unknown): value is PlainObject;
+export declare const hasProperty: (object: PlainObject, key: string | number | symbol) => boolean;
+/**
+ * Like {@link Array}, but always non-empty.
+ *
+ * @template T - The non-empty array member type.
+ */
+export declare type NonEmptyArray<T> = [T, ...T[]];
+/**
+ * {@link NonEmptyArray} type guard.
+ *
+ * @template T - The non-empty array member type.
+ * @param value - The value to check.
+ * @returns Whether the value is a non-empty array.
+ */
+export declare function isNonEmptyArray<T>(value: T[]): value is NonEmptyArray<T>;
+/**
+ * {@link Json} type guard.
+ *
+ * @param value - The value to check.
+ * @returns Whether the value is valid JSON.
+ */
+export declare function isValidJson(value: unknown): value is Json;
+/**
+ * Makes every specified property of the specified object type mutable.
+ *
+ * @template T - The object whose readonly properties to make mutable.
+ * @template TargetKey - The property key(s) to make mutable.
+ */
+export declare type Mutable<T extends Record<string, unknown>, TargetKey extends string> = {
+    -readonly [Key in keyof Pick<T, TargetKey>]: T[Key];
+} & {
+    [Key in keyof Omit<T, TargetKey>]: T[Key];
+};
+export {};
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/utils.js b/node_modules/@metamask/snap-controllers/dist/dist/utils.js
new file mode 100644
index 0000000..c2c13b9
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/utils.js
@@ -0,0 +1,48 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.isValidJson = exports.isNonEmptyArray = exports.hasProperty = exports.isPlainObject = exports.timeSince = void 0;
+const fast_deep_equal_1 = __importDefault(require("fast-deep-equal"));
+/**
+ * @param timestamp - A Unix millisecond timestamp.
+ * @returns The number of milliseconds elapsed since the specified timestamp.
+ */
+function timeSince(timestamp) {
+    return Date.now() - timestamp;
+}
+exports.timeSince = timeSince;
+function isPlainObject(value) {
+    return Boolean(value) && typeof value === 'object' && !Array.isArray(value);
+}
+exports.isPlainObject = isPlainObject;
+const hasProperty = (object, key) => Reflect.hasOwnProperty.call(object, key);
+exports.hasProperty = hasProperty;
+/**
+ * {@link NonEmptyArray} type guard.
+ *
+ * @template T - The non-empty array member type.
+ * @param value - The value to check.
+ * @returns Whether the value is a non-empty array.
+ */
+function isNonEmptyArray(value) {
+    return Array.isArray(value) && value.length > 0;
+}
+exports.isNonEmptyArray = isNonEmptyArray;
+/**
+ * {@link Json} type guard.
+ *
+ * @param value - The value to check.
+ * @returns Whether the value is valid JSON.
+ */
+function isValidJson(value) {
+    try {
+        return fast_deep_equal_1.default(value, JSON.parse(JSON.stringify(value)));
+    }
+    catch (_) {
+        return false;
+    }
+}
+exports.isValidJson = isValidJson;
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/dist/utils.js.map b/node_modules/@metamask/snap-controllers/dist/dist/utils.js.map
new file mode 100644
index 0000000..bb6528e
--- /dev/null
+++ b/node_modules/@metamask/snap-controllers/dist/dist/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";;;;;;AACA,sEAAwC;AAExC;;;GAGG;AACH,SAAgB,SAAS,CAAC,SAAiB;IACzC,OAAO,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;AAChC,CAAC;AAFD,8BAEC;AAID,SAAgB,aAAa,CAAC,KAAc;IAC1C,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9E,CAAC;AAFD,sCAEC;AAEM,MAAM,WAAW,GAAG,CACzB,MAAmB,EACnB,GAA6B,EAC7B,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAHjC,QAAA,WAAW,eAGsB;AAS9C;;;;;;GAMG;AACH,SAAgB,eAAe,CAAI,KAAU;IAC3C,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAClD,CAAC;AAFD,0CAEC;AAED;;;;;GAKG;AACH,SAAgB,WAAW,CAAC,KAAc;IACxC,IAAI;QACF,OAAO,yBAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5D;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAC;KACd;AACH,CAAC;AAND,kCAMC"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.d.ts b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.d.ts
index e42ccf4..0ae2e41 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.d.ts
+++ b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.d.ts
@@ -31,7 +31,21 @@ export declare abstract class AbstractExecutionService<JobType extends Job> impl
     protected _unresponsiveTimeout: number;
     protected _timeoutForUnresponsiveMap: Map<string, number>;
     constructor({ setupSnapProvider, messenger, unresponsivePollingInterval, unresponsiveTimeout, }: ExecutionServiceArgs);
-    abstract terminate(jobId: string): void;
+    /**
+     * Performs additional necessary work during job termination. **MUST** be
+     * implemented by concrete implementations. See
+     * {@link AbstractExecutionService.terminate} for details.
+     *
+     * @param job - The object corresponding to the job to be terminated.
+     */
+    protected abstract _terminate(job: JobType): void;
+    /**
+     * Terminates the job with the specified ID and deletes all its associated
+     * data. Any subsequent messages targeting the job will fail with an error.
+     *
+     * @param jobId - The id of the job to be terminated.
+     */
+    terminate(jobId: string): void;
     protected abstract _initJob(): Promise<JobType>;
     terminateSnap(snapId: string): Promise<void>;
     terminateAllSnaps(): Promise<void>;
diff --git a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js
index 2bbc7fc..ac33751 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js
+++ b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js
@@ -19,6 +19,37 @@ class AbstractExecutionService {
         this._unresponsiveTimeout = unresponsiveTimeout;
         this._timeoutForUnresponsiveMap = new Map();
     }
+    /**
+     * Terminates the job with the specified ID and deletes all its associated
+     * data. Any subsequent messages targeting the job will fail with an error.
+     *
+     * @param jobId - The id of the job to be terminated.
+     */
+    terminate(jobId) {
+        const jobWrapper = this.jobs.get(jobId);
+        if (!jobWrapper) {
+            throw new Error(`Job with id "${jobId}" not found.`);
+        }
+        Object.values(jobWrapper.streams).forEach((stream) => {
+            try {
+                !stream.destroyed && stream.destroy();
+                stream.removeAllListeners();
+            }
+            catch (err) {
+                console.log('Error while destroying stream', err);
+            }
+        });
+        this._terminate(jobWrapper);
+        const snapId = this.jobToSnapMap.get(jobId);
+        if (!snapId) {
+            throw new Error(`Failed to find a snap for job with id "${jobId}"`);
+        }
+        clearTimeout(this._timeoutForUnresponsiveMap.get(snapId));
+        this._timeoutForUnresponsiveMap.delete(snapId);
+        this._removeSnapAndJobMapping(jobId);
+        this.jobs.delete(jobId);
+        console.log(`job: "${jobId}" terminated`);
+    }
     async terminateSnap(snapId) {
         const jobId = this.snapToJobMap.get(snapId);
         if (!jobId) {
@@ -97,13 +128,16 @@ class AbstractExecutionService {
             throw new Error('no job id found for snap');
         }
         const timeout = setTimeout(async () => {
-            this._getJobStatus(jobId)
-                .then(() => {
+            try {
+                await this._getJobStatus(jobId);
                 this._pollForJobStatus(snapId);
-            })
-                .catch(() => {
-                this._messenger.publish('ExecutionService:unresponsive', snapId);
-            });
+            }
+            catch (_a) {
+                // The snap may have been terminated by the time we get here.
+                if (this.snapToJobMap.has(snapId)) {
+                    this._messenger.publish('ExecutionService:unresponsive', snapId);
+                }
+            }
         }, this._unresponsivePollingInterval);
         this._timeoutForUnresponsiveMap.set(snapId, timeout);
     }
diff --git a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js.map b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js.map
index 30f3397..cc92968 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js.map
+++ b/node_modules/@metamask/snap-controllers/dist/services/AbstractExecutionService.js.map
@@ -1 +1 @@
-{"version":3,"file":"AbstractExecutionService.js","sourceRoot":"","sources":["../../src/services/AbstractExecutionService.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"AbstractExecutionService.js","sourceRoot":"","sources":["../../src/services/AbstractExecutionService.ts"],"names":[],"mappings":";;;;;;AACA,kFAAyD;AAUzD,mCAAgC;AAChC,gDAAwB;AA4BxB,MAAsB,wBAAwB;IAqB5C,YAAY,EACV,iBAAiB,EACjB,SAAS,EACT,2BAA2B,GAAG,IAAI,EAClC,mBAAmB,GAAG,KAAK,GACN;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,4BAA4B,GAAG,2BAA2B,CAAC;QAChE,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;QAChD,IAAI,CAAC,0BAA0B,GAAG,IAAI,GAAG,EAAE,CAAC;IAC9C,CAAC;IAWD;;;;;OAKG;IACI,SAAS,CAAC,KAAa;QAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,gBAAgB,KAAK,cAAc,CAAC,CAAC;SACtD;QAED,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACnD,IAAI;gBACF,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtC,MAAM,CAAC,kBAAkB,EAAE,CAAC;aAC7B;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,0CAA0C,KAAK,GAAG,CAAC,CAAC;SACrE;QAED,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,cAAc,CAAC,CAAC;IAC5C,CAAC;IAID,KAAK,CAAC,aAAa,CAAC,MAAc;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,mCAAmC,MAAM,IAAI,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;YACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,oBAAoB,CAAC,MAAc;QACvC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAA2B;QAC3C,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC1C,MAAM,IAAI,KAAK,CAAC,SAAS,QAAQ,CAAC,MAAM,8BAA8B,CAAC,CAAC;SACzE;QAED,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CACpB,QAAQ,CAAC,MAAM,EACf,GAAG,CAAC,OAAO,CAAC,GAAwB,CACrC,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE;YACzC,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,aAAa;YACrB,MAAM,EAAE,QAAQ;YAChB,EAAE,EAAE,eAAM,EAAE;SACb,CAAC,CAAC;QACH,mGAAmG;QACnG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/C,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,KAAK,CAAC,QAAQ,CACtB,KAAa,EACb,OAAgC;QAEhC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACtC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,gBAAgB,KAAK,cAAc,CAAC,CAAC;SACtD;QAED,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAChD,MAAM,QAAQ,GACZ,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACzC;QACD,OAAO,QAAQ,CAAC,MAAM,CAAC;IACzB,CAAC;IAES,gBAAgB,CAAC,MAAc;QACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAES,gBAAgB,CAAC,MAAc,EAAE,QAAgB;QACzD,MAAM,OAAO,GAAG,KAAK,EACnB,MAAc,EACd,OAAgC,EAChC,EAAE;YACF,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBACnC,EAAE,EAAE,eAAM,EAAE;gBACZ,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,SAAS;gBACjB,MAAM,EAAE;oBACN,MAAM;oBACN,OAAO;oBACP,MAAM,EAAE,MAAM;iBACf;aACF,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IAES,iBAAiB,CAAC,MAAc;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC7C;QAED,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,IAAI,EAAE;YACpC,IAAI;gBACF,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aAChC;YAAC,WAAM;gBACN,6DAA6D;gBAC7D,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBACjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,+BAA+B,EAAE,MAAM,CAAC,CAAC;iBAClE;aACF;QACH,CAAC,EAAE,IAAI,CAAC,4BAA4B,CAAsB,CAAC;QAC3D,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAES,KAAK,CAAC,aAAa,CAAC,KAAa;QACzC,IAAI,OAAY,CAAC;QACjB,IAAI,MAAW,CAAC;QAEhB,MAAM,cAAc,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAC9C,OAAO,GAAG,GAAG,CAAC;YACd,MAAM,GAAG,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAC9C,CAAC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAE9B,OAAO,OAAO,CAAC,IAAI,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;gBACnB,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,EAAE;gBACV,EAAE,EAAE,eAAM,EAAE;aACb,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACX,YAAY,CAAC,OAAO,CAAC,CAAC;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC;YACF,cAAc;SACf,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACO,cAAc,CAAC,MAAc;QACrC,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAES,cAAc,CAAC,MAAc,EAAE,KAAa;QACpD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAES,wBAAwB,CAAC,KAAa;QAC9C,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,SAAS,KAAK,uBAAuB,CAAC,CAAC;SACxD;QAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;CACF;AA9PD,4DA8PC;AAED;;;;;;GAMG;AACH,SAAgB,cAAc,CAC5B,gBAAwB,EACxB,UAAkB;IAElB,MAAM,GAAG,GAAG,IAAI,0BAAe,EAAE,CAAC;IAClC,cAAI,CACF,gBAAgB;IAChB,iCAAiC;IACjC,GAAwB,EACxB,gBAAgB,EAChB,CAAC,GAAG,EAAE,EAAE;QACN,IAAI,GAAG,EAAE;YACP,UAAU;gBACR,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,UAAU,mBAAmB,EAAE,GAAG,CAAC;gBACvD,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACxB;IACH,CAAC,CACF,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC;AAnBD,wCAmBC"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.d.ts b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.d.ts
index 31e5c50..057ee0f 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.d.ts
+++ b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.d.ts
@@ -31,7 +31,7 @@ export declare class WebWorkerExecutionService extends AbstractExecutionService<
     constructor({ setupSnapProvider, workerUrl, messenger, unresponsivePollingInterval, unresponsiveTimeout, }: WorkerControllerArgs);
     private _setWorker;
     private _deleteWorker;
-    terminate(workerId: string): void;
+    protected _terminate(workerWrapper: WorkerWrapper): void;
     protected _initJob(): Promise<WorkerWrapper>;
     _initWorkerStreams(worker: Worker, workerId: string): WorkerStreams;
 }
diff --git a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js
index 2b15886..b98a335 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js
+++ b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js
@@ -34,30 +34,9 @@ class WebWorkerExecutionService extends AbstractExecutionService_1.AbstractExecu
         delete newWorkerState[workerId];
         this.store.updateState({ workers: newWorkerState });
     }
-    terminate(workerId) {
-        const workerWrapper = this.jobs.get(workerId);
-        if (!workerWrapper) {
-            throw new Error(`Worker with id "${workerId}" not found.`);
-        }
-        const snapId = this._getSnapForJob(workerId);
-        if (!snapId) {
-            throw new Error(`Failed to find a snap for worker with id "${workerId}".`);
-        }
-        Object.values(workerWrapper.streams).forEach((stream) => {
-            try {
-                !stream.destroyed && stream.destroy();
-                stream.removeAllListeners();
-            }
-            catch (err) {
-                console.log('Error while destroying stream', err);
-            }
-        });
+    _terminate(workerWrapper) {
         workerWrapper.worker.terminate();
-        this._removeSnapAndJobMapping(workerId);
-        this._deleteWorker(workerId);
-        clearTimeout(this._timeoutForUnresponsiveMap.get(workerId));
-        this._timeoutForUnresponsiveMap.delete(workerId);
-        console.log(`worker:${workerId} terminated`);
+        this._deleteWorker(workerWrapper.id);
     }
     async _initJob() {
         const workerId = nanoid_1.nanoid();
diff --git a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js.map b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js.map
index 41eb65d..d3b00f6 100644
--- a/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js.map
+++ b/node_modules/@metamask/snap-controllers/dist/services/WebWorkerExecutionService.js.map
@@ -1 +1 @@
-{"version":3,"file":"WebWorkerExecutionService.js","sourceRoot":"","sources":["../../src/services/WebWorkerExecutionService.ts"],"names":[],"mappings":";;;;;;AACA,mDAAsD;AACtD,uEAA8E;AAE9E,6EAAqE;AACrE,qDAAgD;AAChD,2EAAoE;AACpE,mCAAgC;AAChC,gDAAwB;AACxB,yEAIoC;AAuBpC,MAAa,yBAA0B,SAAQ,mDAAuC;IAKpF,YAAY,EACV,iBAAiB,EACjB,SAAS,EACT,SAAS,EACT,2BAA2B,GAAG,IAAI,EAClC,mBAAmB,GAAG,KAAK,GACN;QACrB,KAAK,CAAC;YACJ,iBAAiB;YACjB,SAAS;YACT,2BAA2B;YAC3B,mBAAmB;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,2BAAe,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,CAAC;IAEO,UAAU,CAAC,QAAgB,EAAE,aAA4B;QAC/D,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAEvC,MAAM,cAAc,mCACd,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAyC,KACnE,CAAC,QAAQ,CAAC,EAAE,aAAa,GAC1B,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IACtD,CAAC;IAEO,aAAa,CAAC,QAAgB;QACpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE3B,MAAM,cAAc,qBACd,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAyC,CACpE,CAAC;QACF,OAAO,cAAc,CAAC,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE9C,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,mBAAmB,QAAQ,cAAc,CAAC,CAAC;SAC5D;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QAE7C,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,IAAI,KAAK,CACb,6CAA6C,QAAQ,IAAI,CAC1D,CAAC;SACH;QAED,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACtD,IAAI;gBACF,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,OAAO,EAAE,CAAC;gBACtC,MAAM,CAAC,kBAAkB,EAAE,CAAC;aAC7B;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;QACH,aAAa,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACjC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAE7B,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEjD,OAAO,CAAC,GAAG,CAAC,UAAU,QAAQ,aAAa,CAAC,CAAC;IAC/C,CAAC;IAES,KAAK,CAAC,QAAQ;QACtB,MAAM,QAAQ,GAAG,eAAM,EAAE,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE;YACxC,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;QACH,4FAA4F;QAC5F,MAAM,YAAY,GAAG,CAAC,EAAc,EAAE,EAAE;YACtC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAC/C,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,iCAAiC,EAAE,MAAM,EAAE;wBACjE,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI;wBACnB,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO;wBACzB,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI;qBACpB,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC1D,MAAM,SAAS,GAAG,IAAI,+BAAa,EAAE,CAAC;QAEtC,MAAM,iBAAiB,GAAG,mDAAsB,EAAE,CAAC;QAEnD,cAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAE1E,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAE7C,MAAM,aAAa,GAAG;YACpB,EAAE,EAAE,QAAQ;YACZ,OAAO;YACP,SAAS;YACT,MAAM;SACP,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAEzC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAC5B,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,MAAM;YACd,EAAE,EAAE,eAAM,EAAE;SACb,CAAC,CAAC;QAEH,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,kBAAkB,CAAC,MAAc,EAAE,QAAgB;QACjD,MAAM,YAAY,GAAG,IAAI,mDAA6B,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;QACnE,+CAA+C;QAC/C,MAAM,GAAG,GAAG,yCAAc,CACxB,YAAiC,EACjC,UAAU,QAAQ,EAAE,CACrB,CAAC;QAEF,MAAM,aAAa,GAAG,GAAG,CAAC,YAAY,CAAC,0CAAiB,CAAC,OAAO,CAAC,CAAC;QAElE,MAAM,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,0CAAiB,CAAC,QAAQ,CAAC,CAAC;QAE/D,iCAAiC;QACjC,OAAO;YACL,OAAO,EAAE,aAAkC;YAC3C,GAAG,EAAE,SAAS;YACd,WAAW,EAAE,YAAY;SAC1B,CAAC;IACJ,CAAC;CACF;AA3ID,8DA2IC"}
\ No newline at end of file
+{"version":3,"file":"WebWorkerExecutionService.js","sourceRoot":"","sources":["../../src/services/WebWorkerExecutionService.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.d.ts b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.d.ts
index 6838bc9..e5c8f93 100644
--- a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.d.ts
+++ b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.d.ts
@@ -57,17 +57,17 @@ export declare type Snap = {
  */
 export interface SnapRuntimeData {
     /**
-     * RPC handler designated for the Snap
+     * A promise that resolves when the Snap has finished installing
      */
-    rpcHandler: null | ((origin: string, request: Record<string, unknown>) => Promise<unknown>);
+    installPromise: null | Promise<Snap>;
     /**
      * A Unix timestamp for the last time the Snap received an RPC request
      */
     lastRequest: null | number;
     /**
-     * A promise that resolves when the Snap has finished installing
+     * RPC handler designated for the Snap
      */
-    installPromise: null | Promise<Snap>;
+    rpcHandler: null | ((origin: string, request: Record<string, unknown>) => Promise<unknown>);
 }
 /**
  * A {@link Snap} object with the fields that are relevant to an external
@@ -222,8 +222,8 @@ export declare class SnapController extends BaseController<string, SnapControlle
     private registerMessageHandlers;
     _pollForLastRequestStatus(): void;
     _stopSnapsLastRequestPastMax(): void;
-    _onUnresponsiveSnap(snapId: SnapId): void;
-    _onUnhandledSnapError(snapId: SnapId, error: ErrorJSON): void;
+    _onUnresponsiveSnap(snapId: SnapId): Promise<void>;
+    _onUnhandledSnapError(snapId: SnapId, error: ErrorJSON): Promise<void>;
     /**
      * Transitions between states using `snapStatusStateMachineConfig` as the template to figure out the next state.
      * This transition function uses a very minimal subset of XState conventions:
@@ -267,8 +267,8 @@ export declare class SnapController extends BaseController<string, SnapControlle
      * terminates its worker.
      *
      * @param snapId - The id of the Snap to stop.
-     * @param setNotRunning - Whether to mark the snap as not running. Should
-     * only be set to `false` if the state is properly transitioned by the caller.
+     * @param statusEvent - The Snap status event that caused the snap to be
+     * stopped.
      */
     private _stopSnap;
     /**
@@ -312,7 +312,7 @@ export declare class SnapController extends BaseController<string, SnapControlle
      *
      * @param snapError - The error to store on the SnapController
      */
-    addSnapError(snapError: SnapError): Promise<void>;
+    addSnapError(snapError: SnapError): void;
     /**
      * Removes an error by internalID from a the SnapControllers state.
      *
diff --git a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js
index 3971620..2fffe48 100644
--- a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js
+++ b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js
@@ -179,24 +179,23 @@ class SnapController extends controllers_1.BaseControllerV2 {
             if (runtime.lastRequest &&
                 this._maxIdleTime &&
                 utils_1.timeSince(runtime.lastRequest) > this._maxIdleTime) {
-                this._stopSnap(snapId);
+                this._stopSnap(snapId, SnapStatusEvent.stop);
             }
         });
     }
-    _onUnresponsiveSnap(snapId) {
-        this._transitionSnapState(snapId, SnapStatusEvent.crash);
-        this._stopSnap(snapId, false);
+    async _onUnresponsiveSnap(snapId) {
+        await this._stopSnap(snapId, SnapStatusEvent.crash);
         this.addSnapError({
-            code: -32001,
+            // TODO: Standardize error code
+            code: eth_rpc_errors_1.errorCodes.rpc.internal,
             message: 'Snap Unresponsive',
             data: {
                 snapId,
             },
         });
     }
-    _onUnhandledSnapError(snapId, error) {
-        this._transitionSnapState(snapId, SnapStatusEvent.crash);
-        this._stopSnap(snapId, false);
+    async _onUnhandledSnapError(snapId, error) {
+        await this._stopSnap(snapId, SnapStatusEvent.crash);
         this.addSnapError(error);
     }
     /**
@@ -266,10 +265,13 @@ class SnapController extends controllers_1.BaseControllerV2 {
      */
     disableSnap(snapId) {
         this.update((state) => {
+            if (!state.snaps[snapId]) {
+                throw new Error(`Snap "${snapId}" not found.`);
+            }
             state.snaps[snapId].enabled = false;
         });
         if (this.isRunning(snapId)) {
-            return this.stopSnap(snapId);
+            return this._stopSnap(snapId, SnapStatusEvent.stop);
         }
         return Promise.resolve();
     }
@@ -287,7 +289,7 @@ class SnapController extends controllers_1.BaseControllerV2 {
         if (!this.isRunning(snapId)) {
             throw new Error(`Snap "${snapId}" already stopped.`);
         }
-        return this._stopSnap(snapId).then(() => {
+        return this._stopSnap(snapId, SnapStatusEvent.stop).then(() => {
             console.log(`Snap "${snapId}" stopped.`);
         });
     }
@@ -296,18 +298,25 @@ class SnapController extends controllers_1.BaseControllerV2 {
      * terminates its worker.
      *
      * @param snapId - The id of the Snap to stop.
-     * @param setNotRunning - Whether to mark the snap as not running. Should
-     * only be set to `false` if the state is properly transitioned by the caller.
+     * @param statusEvent - The Snap status event that caused the snap to be
+     * stopped.
      */
-    async _stopSnap(snapId, setNotRunning = true) {
+    async _stopSnap(snapId, statusEvent) {
         const runtime = this._getSnapRuntimeData(snapId);
+        if (!runtime) {
+            return;
+        }
         runtime.lastRequest = null;
-        this._closeAllConnections(snapId);
-        if (this.get(snapId) && this.isRunning(snapId)) {
-            await this._terminateSnap(snapId);
+        try {
+            if (this.isRunning(snapId)) {
+                this._closeAllConnections(snapId);
+                await this._terminateSnap(snapId);
+            }
         }
-        if (setNotRunning) {
-            this._transitionSnapState(snapId, SnapStatusEvent.stop);
+        finally {
+            if (this.isRunning(snapId)) {
+                this._transitionSnapState(snapId, statusEvent);
+            }
         }
     }
     /**
@@ -375,7 +384,7 @@ class SnapController extends controllers_1.BaseControllerV2 {
      *
      * @param snapError - The error to store on the SnapController
      */
-    async addSnapError(snapError) {
+    addSnapError(snapError) {
         this.update((state) => {
             const id = nanoid_1.nanoid();
             state.snapErrors[id] = Object.assign(Object.assign({}, snapError), { internalID: id });
@@ -542,7 +551,7 @@ class SnapController extends controllers_1.BaseControllerV2 {
         }
         // Existing snaps must be stopped before overwriting
         if (existingSnap && this.isRunning(snapId)) {
-            await this.stopSnap(snapId);
+            await this._stopSnap(snapId, SnapStatusEvent.stop);
         }
         try {
             const { sourceCode } = await this.add({
@@ -832,7 +841,7 @@ class SnapController extends controllers_1.BaseControllerV2 {
             let timeout;
             const timeoutPromise = new Promise((_resolve, reject) => {
                 timeout = setTimeout(() => {
-                    this._stopSnap(snapId);
+                    this._stopSnap(snapId, SnapStatusEvent.stop);
                     reject(new Error('The request timed out.'));
                 }, this._maxRequestTime);
             });
diff --git a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js.map b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js.map
index 9069d0d..2ce09a6 100644
--- a/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js.map
+++ b/node_modules/@metamask/snap-controllers/dist/snaps/SnapController.js.map
@@ -1 +1 @@
-{"version":3,"file":"SnapController.js","sourceRoot":"","sources":["../../src/snaps/SnapController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"SnapController.js","sourceRoot":"","sources":["../../src/snaps/SnapController.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
